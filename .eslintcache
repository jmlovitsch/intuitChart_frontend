[{"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Dashboard.js":"1","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/employee/ReportPages.js":"2","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Pain.js":"3","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Vitals.js":"4","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IO.js":"5","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Diet.js":"6","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IV.js":"7","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/DailyCares.js":"8","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Medications.js":"9","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/OrdersNavigator.js":"10","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Labs.js":"11","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Nursing.js":"12","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Imaging.js":"13","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Consult.js":"14","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/AssessmentNavigator.js":"15","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftAssessment.js":"16","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/CarePlan.js":"17","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftNotes.js":"18","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Orders.js":"19","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Employee.js":"20","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/FormFunctions.js":"21","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Header.js":"22","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/App.js":"23","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreatePatient.js":"24","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Assessment.js":"25","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/employees.js":"26","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/ClaimAdmissions.js":"27","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/BrainPage.js":"28","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/users.js":"29","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Education.js":"30","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PrescripeRx.js":"31","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/HospitalAdmin.js":"32","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/MAR.js":"33","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/index.js":"34","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/admissions.js":"35","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/Profile.js":"36","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assessment.js":"37","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/admission.js":"38","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Admin.js":"39","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assignments.js":"40","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/UserCategories.js":"41","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/index.js":"42","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DeletePopUp.js":"43","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/patients.js":"44","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Login.js":"45","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/NewNote.js":"46","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/orders.js":"47","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/auth.js":"48","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/drugs.js":"49","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Navigator.js":"50","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/careplan.js":"51","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/careplans.js":"52","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DateTime.js":"53","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assessment.js":"54","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/PatientCarePlan.js":"55","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/auth.js":"56","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/LoadingCard.js":"57","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/employee.js":"58","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ATD.js":"59","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/ATDNavigator.js":"60","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Discharge.js":"61","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Transfers.js":"62","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Admitting.js":"63","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/drug.js":"64","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/History.js":"65","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/SelfCreateUser.js":"66","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/patients.js":"67","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Patient.js":"68","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assignments.js":"69","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateAdmission.js":"70","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/Agreement.js":"71","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateNewPatientFoms.js":"72","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Summary.js":"73","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateEmployee.js":"74","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateUser.js":"75","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/EditUser.js":"76"},{"size":1087,"mtime":1609612008949,"results":"77","hashOfConfig":"78"},{"size":6768,"mtime":1609869408314,"results":"79","hashOfConfig":"78"},{"size":8279,"mtime":1609695193759,"results":"80","hashOfConfig":"78"},{"size":9430,"mtime":1609695367516,"results":"81","hashOfConfig":"78"},{"size":4228,"mtime":1609695183205,"results":"82","hashOfConfig":"78"},{"size":7303,"mtime":1609695536849,"results":"83","hashOfConfig":"78"},{"size":5410,"mtime":1609695191732,"results":"84","hashOfConfig":"78"},{"size":4133,"mtime":1609789797297,"results":"85","hashOfConfig":"78"},{"size":6093,"mtime":1609695259781,"results":"86","hashOfConfig":"78"},{"size":2046,"mtime":1609436981526,"results":"87","hashOfConfig":"78"},{"size":5742,"mtime":1609695211952,"results":"88","hashOfConfig":"78"},{"size":3325,"mtime":1609695281997,"results":"89","hashOfConfig":"78"},{"size":3028,"mtime":1609695244628,"results":"90","hashOfConfig":"78"},{"size":900,"mtime":1608736086729,"results":"91","hashOfConfig":"78"},{"size":1761,"mtime":1609436644061,"results":"92","hashOfConfig":"78"},{"size":345,"mtime":1607985689662,"results":"93","hashOfConfig":"78"},{"size":8199,"mtime":1609789980854,"results":"94","hashOfConfig":"78"},{"size":329,"mtime":1607985702724,"results":"95","hashOfConfig":"78"},{"size":2283,"mtime":1609625369614,"results":"96","hashOfConfig":"78"},{"size":1266,"mtime":1609546489379,"results":"97","hashOfConfig":"78"},{"size":1642,"mtime":1609100605604,"results":"98","hashOfConfig":"78"},{"size":8052,"mtime":1609864468936,"results":"99","hashOfConfig":"78"},{"size":2162,"mtime":1609863222742,"results":"100","hashOfConfig":"78"},{"size":4846,"mtime":1609871966764,"results":"101","hashOfConfig":"78"},{"size":1856,"mtime":1609626021749,"results":"102","hashOfConfig":"78"},{"size":110,"mtime":1609184628933,"results":"103","hashOfConfig":"78"},{"size":3870,"mtime":1609858153088,"results":"104","hashOfConfig":"78"},{"size":12563,"mtime":1609867887544,"results":"105","hashOfConfig":"78"},{"size":2695,"mtime":1609266761632,"results":"106","hashOfConfig":"78"},{"size":326,"mtime":1609617340816,"results":"107","hashOfConfig":"78"},{"size":3373,"mtime":1608757846922,"results":"108","hashOfConfig":"78"},{"size":5686,"mtime":1609873709559,"results":"109","hashOfConfig":"78"},{"size":308,"mtime":1607985665999,"results":"110","hashOfConfig":"78"},{"size":994,"mtime":1609363256821,"results":"111","hashOfConfig":"78"},{"size":629,"mtime":1609451478168,"results":"112","hashOfConfig":"78"},{"size":8466,"mtime":1609871189726,"results":"113","hashOfConfig":"78"},{"size":549,"mtime":1609621777946,"results":"114","hashOfConfig":"78"},{"size":804,"mtime":1609610084861,"results":"115","hashOfConfig":"78"},{"size":5689,"mtime":1609873865352,"results":"116","hashOfConfig":"78"},{"size":751,"mtime":1609621693355,"results":"117","hashOfConfig":"78"},{"size":869,"mtime":1609453545053,"results":"118","hashOfConfig":"78"},{"size":554,"mtime":1609746152133,"results":"119","hashOfConfig":"78"},{"size":2202,"mtime":1609872634284,"results":"120","hashOfConfig":"78"},{"size":976,"mtime":1609451353565,"results":"121","hashOfConfig":"78"},{"size":4105,"mtime":1609863796729,"results":"122","hashOfConfig":"78"},{"size":4306,"mtime":1609629932935,"results":"123","hashOfConfig":"78"},{"size":616,"mtime":1609693539657,"results":"124","hashOfConfig":"78"},{"size":718,"mtime":1609860706097,"results":"125","hashOfConfig":"78"},{"size":987,"mtime":1609105592369,"results":"126","hashOfConfig":"78"},{"size":2750,"mtime":1609745810627,"results":"127","hashOfConfig":"78"},{"size":1295,"mtime":1609786228409,"results":"128","hashOfConfig":"78"},{"size":655,"mtime":1609790226562,"results":"129","hashOfConfig":"78"},{"size":607,"mtime":1609460520861,"results":"130","hashOfConfig":"78"},{"size":377,"mtime":1609454652496,"results":"131","hashOfConfig":"78"},{"size":1495,"mtime":1609787373005,"results":"132","hashOfConfig":"78"},{"size":518,"mtime":1609455155612,"results":"133","hashOfConfig":"78"},{"size":338,"mtime":1608741914561,"results":"134","hashOfConfig":"78"},{"size":1099,"mtime":1609451349265,"results":"135","hashOfConfig":"78"},{"size":1341,"mtime":1609796715272,"results":"136","hashOfConfig":"78"},{"size":1265,"mtime":1609796761019,"results":"137","hashOfConfig":"78"},{"size":377,"mtime":1609796350598,"results":"138","hashOfConfig":"78"},{"size":376,"mtime":1609796352613,"results":"139","hashOfConfig":"78"},{"size":377,"mtime":1609796348421,"results":"140","hashOfConfig":"78"},{"size":214,"mtime":1608741739477,"results":"141","hashOfConfig":"78"},{"size":2509,"mtime":1609808192245,"results":"142","hashOfConfig":"78"},{"size":3751,"mtime":1609871573409,"results":"143","hashOfConfig":"78"},{"size":1104,"mtime":1609428719038,"results":"144","hashOfConfig":"78"},{"size":3148,"mtime":1608661248037,"results":"145","hashOfConfig":"78"},{"size":1118,"mtime":1609377308657,"results":"146","hashOfConfig":"78"},{"size":6830,"mtime":1609873695172,"results":"147","hashOfConfig":"78"},{"size":24563,"mtime":1609866607257,"results":"148","hashOfConfig":"78"},{"size":2031,"mtime":1609867934420,"results":"149","hashOfConfig":"78"},{"size":482,"mtime":1607963726887,"results":"150","hashOfConfig":"78"},{"size":4772,"mtime":1609872977559,"results":"151","hashOfConfig":"78"},{"size":4705,"mtime":1609873561182,"results":"152","hashOfConfig":"78"},{"size":2470,"mtime":1609873207542,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s6i3yl",{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"169"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"223"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"223"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Dashboard.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/employee/ReportPages.js",["334","335","336"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Pain.js",["337","338"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Form,\n  Button,\n  Col,\n  Row,\n  OverlayTrigger,\n  InputGroup,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\nimport { CPOT } from \"../../hooks/NewNote\";\n\nclass Pain extends Component {\n  state = {\n    author: this.props.user.username,\n    admission_id: this.props.admission.id,\n    assume_pain: \"\",\n    asleep: \"\",\n    sscale_type: \"\",\n    scale_value: \"N/A\",\n    orientation: \"\",\n    location: \"\",\n    treatment: \"\",\n    pasero_sedation: \"\",\n  };\n\n  //   handleChange = (event) => {\n  //     console.log(event);\n  //     if (event.target.checked) {\n  //       const newState = {\n  //         ...this.state,\n  //         [event.target.name]: this.state[event.target.name].concat(\n  //           event.target.value\n  //         ),\n  //       };\n  //       this.setState({\n  //         ...newState,\n  //       });\n  //     } else {\n  //       const newState = {\n  //         ...this.state,\n  //         [event.target.name]: this.state[event.target.name].filter(\n  //           (x) => x !== event.target.value\n  //         ),\n  //       };\n  //       this.setState({\n  //         ...newState,\n  //       });\n  //     }\n  //   };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateAssessment(token, \"pains\", { pain: this.state });\n  };\n\n  formLabel = (props) => {\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={this.renderTooltip(props)}\n      >\n        <Form.Label as={Row} value={props} />\n      </OverlayTrigger>\n    );\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          //   type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  generateValueOptions = () => {\n    switch (this.state.sscale_type) {\n      case \"0-10\":\n        return this.generateOptions(\"scale_value\", [\n          \"\",\n          \"Mild\",\n          \"Moderate\",\n          \"Severe\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"10\",\n        ]);\n      case \"CPOT\":\n        return <CPOT />;\n      case \"Wong-Baker\":\n        return this.generateOptions(\"scale_value\", [\n          \"\",\n          \"0, No Hurt\",\n          \"1\",\n          \"2, Hurts Little Bit\",\n          \"3\",\n          \"4, Hurts, Little More\",\n          \"5\",\n          \"6, Hurts Even More\",\n          \"7\",\n          \"8, Hurts, Whole Lot\",\n          \"9\",\n          \"10, Hurts Worst\",\n        ]);\n      case \"Asleep\":\n        return this.generateOptions(\"scale_value\", [\"None\"]);\n      case \"Assume Pain\":\n        return this.generateOptions(\"scale_value\", [\"N/A\"]);\n      default:\n        return this.generateOptions(\"scale_value\", [\"N/A\"]);\n    }\n  };\n\n  render() {\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {/* {formLabel(\"Scoring Tool\")} */}\n                {/* {formLabel(\"Assume Pain\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.assume_pain}\n                  className=\"mb-3\"\n                  name=\"assume_pain\"\n                >\n                  {this.generateOptions(\"assume_pain\", [\"yes\", \"no\"])}\n                </Form.Control>\n\n                {formLabel(\"Asleep\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.asleep}\n                  className=\"mb-3\"\n                  name=\"asleep\"\n                >\n                  {this.generateOptions(\"asleep\", [\"yes\", \"no\"])}\n                </Form.Control> */}\n\n                {formLabel(\"Scale Type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.sscale_type}\n                  className=\"mb-3\"\n                  name=\"sscale_type\"\n                >\n                  {this.generateOptions(\"sscale_type\", [\n                    \"0-10\",\n                    \"CPOT\",\n                    \"Wong-Baker\",\n                    \"Asleep\",\n                    \"Assume Pain\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Scale Value\")}\n                <Form.Control\n                  as=\"select\"\n                  className=\"mb-3\"\n                  name=\"scale_value\"\n                  value={this.state.scale_value}\n                >\n                  {this.generateValueOptions()}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Orientation\")}\n                <Form.Control\n                  as=\"select\"\n                  className=\"mb-3\"\n                  name=\"orientation\"\n                  value={this.state.orientation}\n                >\n                  {this.generateOptions(\"orientation\", [\n                    \"Upper\",\n                    \"Lower\",\n                    \"Mid\",\n                    \"Left\",\n                    \"Right\",\n                    \"Anterior\",\n                    \"Posterior\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Location\")}\n                <Form.Control\n                  as=\"select\"\n                  className=\"mb-3\"\n                  name=\"location\"\n                  value={this.state.location}\n                >\n                  {this.generateOptions(\"location\", [\n                    \"locaiton1\",\n                    \"locaiton3\",\n                    \"locaiton1\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Treatment\")}\n                {formLabel(\"Type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.treatment}\n                  className=\"mb-3\"\n                  name=\"treatment\"\n                >\n                  {this.generateOptions(\"treatment\", [\n                    \"Declines\",\n                    \"Medication\",\n                    \"Non-Pharm\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"Pasero Sedation\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.pasero_sedation}\n                  className=\"mb-3\"\n                  name=\"pasero_sedation\"\n                >\n                  {this.generateOptions(\"pasero_sedation\", [\"1\", \"2\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateAssessment })(Pain);\n",["339","340"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Vitals.js",["341","342","343"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\n\nclass Vitals extends Component {\n  state = {\n    bp_systolic: \"\",\n    bp_diastolic: \"\",\n    bp_site: \"\",\n    bp_position: \"\",\n    bp_type: \"\",\n    hr_type: \"\",\n    hr_bpm: \"\",\n    hr_quality: \"\",\n    temp_site: \"\",\n    temp_degree: \"\",\n    rr_hr: \"\",\n    rr_rrmin: \"\",\n    rr_quality: \"\",\n    o2_saturation: \"\",\n    o2_source: \"\",\n    o2_site: \"\",\n    admission_id: this.props.admission.id,\n    author: this.props.user.id.toString(),\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateAssessment(token, \"vitals\", { vital: this.state });\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  myFunction = () => {\n    var popup = document.getElementById(\"myPopup\");\n    popup.classList.toggle(\"show\");\n  };\n\n  render() {\n    console.log(this.props);\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    console.log(this.state);\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {formLabel(\"Blood Pressure\")}\n                {formLabel(\"Systolic/Diastolic\")}\n                <InputGroup>\n                  <Form.Control type=\"number\" value={this.state.systolic} />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">/</InputGroup.Text>\n                  </InputGroup.Append>\n                  <Form.Control type=\"number\" value={this.state.diastolic} />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">mm/Hg</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"BP Site\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_site}\n                  className=\"mb-3\"\n                  name=\"bp_site\"\n                >\n                  {this.generateOptions(\"bp_site\", [\n                    \"Upper Right Arm\",\n                    \"Lower Right Arm\",\n                    \"Upper Left Arm\",\n                    \"Lower Left Arm\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"BP Position\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_position}\n                  className=\"mb-3\"\n                  name=\"bp_position\"\n                >\n                  {this.generateOptions(\"bp_position\", [\n                    \"Laying Down\",\n                    \"Sitting Up\",\n                    \"Standing Up\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"BP type\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_type}\n                  className=\"mb-3\"\n                  name=\"bp_type\"\n                >\n                  {this.generateOptions(\"bp_type\", [\n                    \"Manual\",\n                    \"Automatic\",\n                    \"Doppler\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Heart Rate\")}\n                {formLabel(\"HR Type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.hr_type}\n                  className=\"mb-3\"\n                  name=\"hr_type\"\n                >\n                  {this.generateOptions(\"hr_type\", [\"Monitor\", \"Manual\"])}\n                </Form.Control>\n                {formLabel(\"HR BPM\")}{\" \"}\n                <InputGroup>\n                  <Form.Control type=\"number\" placeholder=\"HR\" />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">bpm</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"HR Quality\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.hr_quality}\n                  className=\"mb-3\"\n                  name=\"hr_quality\"\n                >\n                  {this.generateOptions(\"hr_quality\", [\"Regular\", \"Irregular\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Temperature\")}\n                {formLabel(\"Temp. Site\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.temp_site}\n                  className=\"mb-3\"\n                  name=\"temp_site\"\n                >\n                  {this.generateOptions(\"temp_site\", [\"Under Arm\", \"Mouth\"])}\n                </Form.Control>\n                {formLabel(\"Temperature Degrees\")}\n                <Form.Control\n                  type=\"number\"\n                  value={this.state.temp_degree}\n                  className=\"mb-3\"\n                  name=\"temp_degree\"\n                />\n                {formLabel(\"Respiration Rate\")}\n                {formLabel(\"RR-HR\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.rr_hr}\n                  className=\"mb-3\"\n                  name=\"rr_hr\"\n                >\n                  {this.generateOptions(\"rr_hr\", [\n                    \"Regular\",\n                    \"Labored\",\n                    \"Shallow\",\n                    \"Irregular\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"RR/min\")}{\" \"}\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    value={this.state.rr_rrmin}\n                    className=\"mb-3\"\n                    name=\"rr_rrmin\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">RR/min</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"RR Quality\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.rr_quality}\n                  name=\"rr_quality\"\n                >\n                  {this.generateOptions(\"rr_quality\", [\"Regular\", \"Irregular\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Oxygen\")}\n                {formLabel(\"O2 Saturation\")}\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    value={this.state.o2_saturation}\n                    name=\"o2_saturation\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>sat%</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n\n                {formLabel(\"O2 Source\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.o2_source}\n                  name=\"o2_source\"\n                >\n                  {this.generateOptions(\"o2_source\", [\n                    \"None (Room Air)\",\n                    \"Nasal Canula\",\n                    \"Nasal Canula: Hi Flow\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"O2 Site\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.o2_site}\n                  name=\"o2_site\"\n                >\n                  {this.generateOptions(\"o2_site\", [\"????\", \"????\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n            <Row className=\"justify-content-end\">\n              <Button\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  border: \"solid\",\n                  color: \"#1761a0\",\n                }}\n              >\n                Submit Assessment\n              </Button>\n            </Row>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateAssessment })(Vitals);\n",["344","345"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IO.js",["346","347","348","349","350","351"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport { FormFunctions } from \"../../hooks/FormFunctions\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\n\nclass IO extends Component {\n  state = {\n    admission_id: this.props.admission.id,\n    author: this.props.user.username,\n    po: \"\",\n    percent_meal: \"\",\n    iv: \"\",\n    urine: \"\",\n    urine_occurance: \"\",\n    urine_color: \"\",\n    uring_appearance: \"\",\n    urine_odor: \"\",\n    stool_occurance: \"\",\n    stool_incontinence: \"\",\n    stool_color: \"\",\n    stool_amount: \"\",\n    stool_appearance: \"\",\n    drainage_method: \"\",\n    internal: \"\",\n    external: \"\",\n    urine_catheter: \"\",\n    male_genetalia: \"\",\n    female_genetalia: \"\",\n  };\n\n  values = {\n    po: [],\n    percent_meal: [],\n    iv: [],\n    urine: [],\n    urine_occurance: [],\n    urine_color: [\"\", \"Yellow\", \"Straw\", \"Amber\", \"Red\", \"Brown\", \"Cola\"],\n    uring_appearance: [\"\", \"Hazy\", \"Cloudy\", \"Clear\", \"Clots\"],\n    urine_odor: [\"\", \"No Odor\", \"Malodorour\", \"Fruity\"],\n    stool_occurance: [],\n    stool_incontinence: [\"\", \"Yes\", \"No\"],\n    stool_color: [],\n    stool_amount: [\"\", \"Large\", \"Medium\", \"Small\", \"Smear\"],\n    stool_appearance: [\"\", \"Loose\", \"Soft\", \"Formed\", \"Hard\"],\n    drainage_method: [],\n    internal: [],\n    external: [],\n    urine_catheter: [],\n    male_genetalia: [\"\", \"Yes\", \"No\"],\n    female_genetalia: [\"\", \"Yes\", \"No\"],\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n      dressing_change_due: event,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state)\n    const token = localStorage.getItem(\"my_app_token\")\n    this.props.fetchCreateAssessment(token, \"intakeoutputs\", {intakeoutput: this.state})\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  render() {\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n\n    const generateForm = () => {\n      return Object.keys(this.values).map((k, index) => {\n        return (\n          <Form.Group style={{padding: \"10px\"}}>\n            {formLabel(k)}\n            <Form.Control\n              as=\"select\"\n              value={this.state.k}\n              className=\"mb-3\"\n              name={k}\n            >\n              {this.generateOptions(k, this.values[k])}\n            </Form.Control>\n          </Form.Group>\n        );\n      });\n    };\n\n    return (\n      <div>\n        <Form\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n        >\n             <Row  lg={5} noGutters>\n            {generateForm()}\n            </Row>\n            <hr/>\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admission: state.admissions.currentAdmission\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateAssessment})(IO);\n",["352","353"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Diet.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IV.js",["354","355","356","357"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport DateTime from \"../../hooks/DateTime\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\n\nclass IV extends Component {\n  state = {\n    admission_id: this.props.admission.id,\n    author: this.props.user.username,\n    iv_type: \"\",\n    dresssing_status: \"\",\n    site_status: \"\",\n    line_status: \"\",\n    dressing_change_due: \"\",\n    cap: \"\",\n  };\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n        dressing_change_due: event,\n    });\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state)\n    const token = localStorage.getItem(\"my_app_token\")\n    this.props.fetchCreateAssessment(token, \"ivs\", {iv: this.state})\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  render() {\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {formLabel(\"Blood Pressure\")}\n                {formLabel(\"IV Type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.iv_type}\n                  className=\"mb-3\"\n                  name=\"iv_type\"\n                >\n                  {this.generateOptions(\"iv_type\", [\n                    \"Bolus\",\n                    \"Infusion\",\n                    \"Secondary\",\n                    \"Lower Left Arm\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Dressing Status\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.dresssing_status}\n                  className=\"mb-3\"\n                  name=\"dresssing_status\"\n                >\n                  {this.generateOptions(\"dresssing_status\", [\n                    \"Clean\",\n                    \"Dry\",\n                    \"Intact\",\n                    \"Drainage\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Site Status\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.site_status}\n                  className=\"mb-3\"\n                  name=\"site_status\"\n                >\n                  {this.generateOptions(\"site_status\", [\n                    \"c|d|i\",\n                    \"red\",\n                    \"painful\",\n                    \"fragile\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Line Status\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.line_status}\n                  className=\"mb-3\"\n                  name=\"line_status\"\n                >\n                  {this.generateOptions(\"line_status\", [\n                    \"Flushed\",\n                    \"Saline locked\",\n                    \"Infusing\",\n                    \"Infiltrated\",\n                    \"Occluded\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Dressing Change Due\")}\n                <Form.Group>\n                <Form.Label>Schedule Start</Form.Label>\n\n                <DateTime\n                  date={this.state.dressing_change_due}\n                  handleDateChange={this.handleDateChange}\n                />\n              </Form.Group>\n\n                {formLabel(\"Cap on\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.cap}\n                  className=\"mb-3\"\n                  name=\"cap\"\n                >\n                  {this.generateOptions(\"cap\", [\"yes\", \"no\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admission: state.admissions.currentAdmission\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateAssessment})(IV);\n",["358","359"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/DailyCares.js",["360","361","362","363","364"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Medications.js",["365"],"import React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Card, Table } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { createPrescription, fetchAllDrugs } from \"../../../actions/drugs\";\nimport LoadingCard from \"../../hooks/LoadingCard\";\nimport PrescribeRx from \"../../hooks/PrescripeRx\";\n\nclass Medication extends Component {\n  state = {\n    search: \"\",\n    results: null,\n    drugs: [],\n    prescribe: false,\n    rxToPrescribe: \"\",\n\n      provider: this.props.user.id,\n      admission_id: 1,\n      written_requested_by: this.props.user.id,\n\n        route: \"\",\n        iv_rate: \"\",\n        source_location: \"\",\n        dose: \"\",\n        time_due: \"\",\n        frequency: \"\",\n        if_prn_reason: \"\",\n        duration: \"\",\n\n\n  };\n\n  createPrescription = () => {\n    const bodyObj = {\n        order: {\n            provider: this.state.provider,\n            admission_id: this.state.admission_id,\n            written_requested_by: this.state.written_requested_by,\n\n                  medication: this.state.rxToPrescribe,\n                  route: this.state.route,\n                  iv_rate: this.state.iv_rate,\n                  source_location: this.state.source_location,\n                  dose: this.state.dose,\n                  time_due: this.state.time_due,\n                  frequency: this.state.frequency,\n                  if_prn_reason: this.state.if_prn_reason,\n                  duration: this.state.duration,\n\n\n\n        }\n    }\n    const token = localStorage.getItem(\"my_app_token\");\n\n    this.props.createPrescription(token, bodyObj)\n\n\n  }\n\n\n  componentDidMount() {\n    //   if (this.props.user.employee_type === ('doctor' || 'nurse')){\n    if (!this.props.drugs.length) {\n      this.props.fetchAllDrugs();\n    }\n    //   }\n    this.setState({\n      drugs: this.props.drugs,\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      search: event.target.value,\n    });\n\n    // const newState = this.state.drugs.filter(\n    //   (drug) =>\n    //     drug.brand_name.slice(0, this.state.search.length) ===\n    //     this.state.search.toUpperCase()\n    // );\n    // this.setState({\n    //   results: newState,\n    // });\n  };\n\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const newState = this.state.drugs.filter((drug) => {\n      return (\n        drug.brand_name.slice(0, this.state.search.length) ===\n        this.state.search.toUpperCase()\n      );\n    });\n    this.setState({\n      results: newState,\n    });\n  };\n\n  handleClick = (event) => {\n    const rxToPrescribe = this.state.results.find(\n      (result) => parseInt(event.target.id, 10) === result.id\n    );\n    console.log(rxToPrescribe);\n    this.setState({\n      prescribe: true,\n      drug_id: event.target.id,\n      rxToPrescribe: rxToPrescribe,\n    });\n  };\n\n  generateRows = () => {\n    return (\n      <Container>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Brand</th>\n              <th>Generic</th>\n              <th>Route</th>\n              <th>Active Ingredients</th>\n              <th>Substance</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderMeds()}</tbody>\n        </Table>\n      </Container>\n    );\n  };\n\n  renderMeds = () => {\n    return this.state.results.map((d) => {\n      return (\n        <tr key={d.id}>\n          <td>\n            {d.brand_name}\n            <br />\n            <Button\n              id={d.id}\n              name=\"selectDrug\"\n              onClick={(e) => {\n                this.handleClick(e);\n              }}\n            >\n              Select\n            </Button>\n          </td>\n          <td>{d.generic_name}</td>\n          <td>{d.route}</td>\n          <td>{d.substance_name}</td>\n          <td>{d.active_ingredients}</td>\n        </tr>\n      );\n    });\n  };\n\n  handleBack = () => {\n    this.setState({\n      prescribe: false,\n      drug_id: \"\",\n    });\n  };\n\n  generateRx = (event) => {\nthis.setState({\n    [event.target.name]: event.target.value\n})  };\n\n  render() {\n    const { results } = this.state;\n    return (\n      <div className=\"scroll-page\">\n        {this.state.prescribe ? (\n          <>\n            {\" \"}\n            <PrescribeRx\n              handleBack={this.handleBack}\n              rx={this.state}\n              generateRx={this.generateRx}\n              rxToPrescribe={this.state.rxToPrescribe}\n              bodyObj={this.bodyObj}\n              createPrescription={this.createPrescription}\n            />\n          </>\n        ) : (\n          <>\n            <Card className=\"scroll-page-title\">\n              {this.props.loading ? (\n                <LoadingCard />\n              ) : (\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Label>Search Drug Name</Form.Label>\n                    <Form.Control\n                      value={this.state.search}\n                      onChange={(e) => this.handleChange(e)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"justify-content-end\">\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        backgroundColor: \"transparent\",\n                        border: \"solid\",\n                        color: \"#1761a0\",\n                      }}\n                    >\n                      Search\n                    </Button>\n                  </Form.Group>\n                </Form>\n              )}\n            </Card>\n\n            <Card className=\"all-drugs-scroll-page\">\n              {Array.isArray(results)\n                ? results.length === 0\n                  ? \"No Medications Available Under That Search\"\n                  : this.generateRows()\n                : \"Search Results Will Appear Here\"}{\" \"}\n            </Card>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.drugs.loading,\n  drugs: state.drugs,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { fetchAllDrugs, createPrescription })(Medication);\n",["366","367"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/OrdersNavigator.js",["368"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nclass OrdersNavigator extends Component {\n  render() {\n      const {id} = this.props\n    return (\n      <div className=\"nav nav-tabs\">\n        <NavLink\n          name=\"medications\"\n          className=\"nav-item nav-link\"\n          to={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/medications`}\n        >\n          Medications\n        </NavLink>\n        <NavLink\n          name=\"labs\"\n          className=\"nav-item nav-link\"\n          to={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/labs`}\n        >\n          Labs\n        </NavLink>\n        <NavLink\n          name=\"nursing\"\n          className=\"nav-item nav-link\"\n          to={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/nursing`}\n        >\n          Nursing\n        </NavLink>\n        <NavLink\n          name=\"consult\"\n          className=\"nav-item nav-link \"\n          to={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/consult`}\n        >\n          Consult\n        </NavLink>\n        <NavLink\n          name=\"imaging\"\n          className=\"nav-item nav-link \"\n          to={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/imaging`}\n        >\n          Imaging\n        </NavLink>\n        <NavLink\n          name=\"diet\"\n          className=\"nav-item nav-link \"\n          to={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/diet`}\n        >\n          Diet\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admissions: state.admissions.array,\n    currentAdmission: state.admissions.currentAdmission,\n    currentPatient: state.patients.currentPatient,\n  });\n\nconst mapDispatchToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersNavigator);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Labs.js",["369","370"],"import React, { Component } from \"react\";\nimport {\n  Col,\n  Form,\n  Row,\n  Button,\n  Tooltip,\n  InputGroup,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchCreateOrder } from \"../../../actions/orders\";\n\nclass Labs extends Component {\n  state = {\n    issued_how: \"\",\n    source: \"\",\n    time_due: \"\",\n    frequency: \"\",\n    provider: \"\",\n    acknowledged_by: \"\",\n    admission_id: this.props.admission.id,\n    written_requested_by: this.props.user.id,\n    author: this.props.user.id,\n    sample_kind: \"\",\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateOrder(token, \"labs\", { lab: this.state });\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  switchOptions = () => {\n    switch (this.state.source) {\n      case \"Blood\":\n        return this.generateOptions(\"sample_kind\", [\"PICC\", \"PIV\", \"Lab Draw\"]);\n      case \"Urine\":\n        return this.generateOptions(\"sample_kind\", [\n          \"Clean Catch\",\n          \"Foley Cathetar\",\n          \"Straight Cathetar\",\n        ]);\n      case \"Speutum\":\n        return this.generateOptions(\"sample_kind\", [\n          \"Tracheal\",\n          \"Cough and Spit\",\n        ]);\n      case \"Stool\":\n        return this.generateOptions(\"sample_kind\", [\"Colostomy\", \"Hat\"]);\n      default:\n        return this.state.sample_kind;\n    }\n  };\n\n  render() {\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n\n    console.log(this.props);\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {formLabel(\"How Issued\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.issued_how}\n                  className=\"mb-3\"\n                  name=\"issued_how\"\n                >\n                  {this.generateOptions(\"issued_how\", [\n                    \"Telephone with readback\",\n                    \"Verbal with readback\",\n                    \"Per Protocol no cosign required\",\n                  ])}\n                </Form.Control>\n                <Row md={2} style={{ margin: \"0\" }}>\n                  <Form.Group>\n                    {formLabel(\"Source\")}\n                    <Form.Control\n                      as=\"select\"\n                      value={this.state.source}\n                      className=\"mb-3\"\n                      name=\"source\"\n                    >\n                      {this.generateOptions(\"source\", [\n                        \"Blood\",\n                        \"Speutum\",\n                        \"Urine\",\n                        \"Stool\",\n                      ])}\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    {formLabel(\"Kind\")}\n                    <Form.Control\n                      as=\"select\"\n                      value={this.state.sample_kind}\n                      className=\"mb-3\"\n                      name=\"sample_kind\"\n                    >\n                      {this.switchOptions()}\n                    </Form.Control>\n                  </Form.Group>\n                </Row>\n                {formLabel(\"Time Due\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.time_due}\n                  className=\"mb-3\"\n                  name=\"time_due\"\n                >\n                  {this.generateOptions(\"time_due\", [\n                    \"STAT\",\n                    \"Timed\",\n                    \"Routine\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"Frequency\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.frequency}\n                  className=\"mb-3\"\n                  name=\"frequency\"\n                >\n                  {this.generateOptions(\"frequency\", [\n                    \"Once\",\n                    \"Daily\",\n                    \"Series\",\n                    \"Daily for Days\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Order\n                </Button>\n              </Row>\n            </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateOrder })(Labs);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Nursing.js",[],["371","372"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Imaging.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Consult.js",["373"],"import React, { Component } from 'react'\nimport { Col, Row, Button, Form } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nclass Consult extends Component {\n    render() {\n        return (\n            <div>\n            <hr />\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  onClick={this.setSubmitTime}\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Order\n                </Button>\n              </Row>\n            </Form.Group>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Consult)\n",["374","375"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/AssessmentNavigator.js",[],["376","377"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftAssessment.js",["378"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/CarePlan.js",["379","380","381"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n  ListGroup,\n} from \"react-bootstrap\";\nimport { fetchAllCareplans, fetchCreateCarePlan } from \"../../../actions/careplan\";\nimport  PatientCarePlan  from \"../../forms/PatientCarePlan\";\n\nclass CarePlan extends Component {\n  state = {\n    author: this.props.user.id,\n    diagnosis_category: \"\",\n    nursing_diagnosis: \"\",\n    ocs: [],\n    acs: [],\n    admission_id: this.props.currentAdmission.id,\n  };\n\n  componentDidMount() {\n    if (this.props.careplans.length === 0) {\n      this.props.fetchAllCareplans();\n    }\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    if (event.target.type === \"checkbox\") {\n      if (event.target.name === \"ocs\") {\n        return this.setState({\n          ocs: this.state.ocs.concat(event.target.value),\n        });\n      } else if (event.target.name === \"acs\") {\n        return this.setState({\n          acs: this.state.acs.concat(event.target.value),\n        });\n      } else {\n        return null;\n      }\n    } else {\n      return this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n      dressing_change_due: event,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateCarePlan(token, {care_plan: this.state} );\n    this.setState({\n        author: this.props.user.id,\n        diagnosis_category: \"\",\n        nursing_diagnosis: \"\",\n        ocs: [],\n        acs: [],\n        admission_id: this.props.currentAdmission.id,\n    })\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n  formLabel = (props) => {\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={this.renderTooltip(props)}\n      >\n        <Form.Label as={Row} value={props} />\n      </OverlayTrigger>\n    );\n  };\n\n  nursing_diagnosis = () => {\n    if (this.state.diagnosis_category !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.map((c) => {\n        return c.name;\n      });\n      return this.generateOptions(\"nursing_diagnosis\", ni);\n    }\n  };\n\n  interventionsOptions = () => {\n    if (this.state.nursing_diagnosis !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.filter((c) => {\n        return c;\n      });\n      let xi = ni.find((n) => {\n        return n.name === this.state.nursing_diagnosis;\n      });\n      let yi = xi.interventions.map((i) => {\n        return i.item;\n      });\n\n      return (\n        <ListGroup style={{ padding: \"10px\" }}>\n          {yi.map((y) => {\n            return (\n              <ListGroup.Item>\n                <Form.Check\n                  type=\"checkbox\"\n                  id={`default-checkbox`}\n                  label={y}\n                  value={y}\n                  name=\"acs\"\n                />\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      );\n    }\n  };\n  goalsOptions = () => {\n    if (this.state.nursing_diagnosis !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.filter((c) => {\n        return c;\n      });\n      let xi = ni.find((n) => {\n        return n.name === this.state.nursing_diagnosis;\n      });\n      let yi = xi.goals.map((g) => {\n        return g.item;\n      });\n\n      return (\n        <ListGroup style={{ padding: \"10px\" }}>\n          {yi.map((y) => {\n            return (\n              <ListGroup.Item>\n                <Form.Check\n                  type=\"checkbox\"\n                  id={`default-checkbox`}\n                  label={y}\n                  value={y}\n                  name=\"ocs\"\n                />\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      );\n    }\n  };\n  eraseState = () => {\n    this.setState({\n      nursing_diagnosis: \"\",\n    });\n  };\n  render() {\n    console.log(this.state);\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    console.log(this.props)\n    return (\n      <Card style={{ height: \"100%\", overflow: \"scroll\" }}>\n        <Card.Body>\n            {true ?\n          <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Row md=\"2\" style={{ margin: \"0\" }}>\n                    <Form.Group as={Col}>\n                      {formLabel(\"Careplan Category\")}\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.diagnosis_category}\n                        className=\"mb-3\"\n                        name=\"diagnosis_category\"\n                        onChange={this.eraseState}\n                      >\n                        {this.generateOptions(\n                          \"diagnosis_category\",\n                          this.props.careplans.map((care) => {\n                            return care.name;\n                          })\n                        )}\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      {formLabel(\"Nursing Diagnosis\")}\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.nursing_diagnosis}\n                        className=\"mb-3\"\n                        name=\"nursing_diagnosis\"\n                      >\n                        {this.nursing_diagnosis()}\n                      </Form.Control>\n                    </Form.Group>\n                  </Row>\n\n                  <Form.Group>\n                    {this.state.nursing_diagnosis !== \"\"\n                      ? formLabel(\"Goals\")\n                      : null}\n                    {this.goalsOptions()}\n                  </Form.Group>\n                  <Form.Group>\n                    {this.state.nursing_diagnosis !== \"\"\n                      ? formLabel(\"Interventions\")\n                      : null}\n                    {this.interventionsOptions()}\n                  </Form.Group>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <hr />\n\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Care Plan\n                </Button>\n              </Row>\n            </Form.Group>\n          </Form>\n          :\n          <PatientCarePlan />}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admissions: state.admissions.array,\n  currentAdmission: state.admissions.currentAdmission,\n  currentPatient: state.patients.currentPatient,\n  careplans: state.careplans.array,\n  patientCareplan: state.careplans.patientCareplan\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchAllCareplans, fetchCreateCarePlan })(CarePlan);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftNotes.js",["382"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nconst ShiftNotes = () => {\n    return (\n        <div>\n            ShiftNotes\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShiftNotes)\n",["383","384"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Orders.js",["385"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Employee.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/FormFunctions.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Header.js",["386","387","388","389","390","391","392","393","394","395"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/App.js",["396"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreatePatient.js",["397"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Assessment.js",[],["398","399"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/employees.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/ClaimAdmissions.js",["400","401","402"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/BrainPage.js",["403","404","405"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/users.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Education.js",["406"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PrescripeRx.js",["407","408"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\n\nconst PrescribeRx = (props) => {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Modal\n      size=\"xl\"\n        show={show}\n        backdrop=\"static\"\n        onHide={(handleClose, props.handleBack)}\n        // keyboard={false}\n        // dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Prescribe Rx: {props.rxToPrescribe.brand_name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onChange={props.generateRx} >\n              <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Route</Form.Label>\n              <Form.Control type=\"text\" name=\"route\" value={props.rx.route} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>IV Rate</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"iv_rate\"\n                value={props.rx.iv_rate}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Source Location</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"source_location\"\n                value={props.rx.source_location}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Dose</Form.Label>\n              <Form.Control type=\"text\" name=\"dose\" value={props.rx.dose} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Time Due</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"time_due\"\n                value={props.rx.time_due}\n              />\n            </Form.Group>\n            </Row>\n            <hr/>\n            <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Frequency</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"frequency\"\n                value={props.rx.frequency}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>PRN Reason</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"if_prn_reason\"\n                value={props.rx.if_prn_reason}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Duration</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"duration\"\n                value={props.rx.duration}\n              />\n            </Form.Group>\n            </Row>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={handleClose, props.createPrescription}\n          >\n            Prescribe\n          </Button>\n          <Button variant=\"primary\" onClick={(handleClose, props.handleBack)}>\n            Go Back\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, )(PrescribeRx);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/HospitalAdmin.js",["409","410"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/MAR.js",["411"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/index.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/admissions.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/Profile.js",["412"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assessment.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/admission.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Admin.js",["413"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assignments.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/UserCategories.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/index.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DeletePopUp.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/patients.js",[],["414","415"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Login.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/NewNote.js",["416"],"import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          //   type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n\nconsole.log(props)\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Critial-Care Pain Observation Tool\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Facial Expression</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Facial Expression\", [\n                \"0, Relaxed, neutral\",\n                \"2, Grimacing\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Body Movements</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Absence of Movements\",\n                \"1, Protection\",\n                \"2, Restlessness\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Muscle Tension</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Muscle Tension\", [\n                \"0, Relaxed\",\n                \"1, Tense, rigid\",\n                \"2, Very tense or rigid\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Press to Toggle Intubated?</Form.Label>\n            <Button\n              className=\"mb-3\"\n              name=\"scale_value\"\n              onClick={props.setIntubated}\n                >{props.intubated ? \"Yes\": \"No\"}</Button>\n          </Form.Group>\n\n{props.intubated ?\n          <Form.Group>\n            <Form.Label>Compliance with Ventilator</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Tolerating ventilator or movement\",\n                \"1, Coughing by tolerating\",\n                \"2, Fighting Ventilator\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n:\n          <Form.Group>\n            <Form.Label>Vocalization (extubated patients)</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Talking in normal tone or no sound\",\n                \"1, Sighing, moaning\",\n                \"2, Crying out, sobbing\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function CPOT() {\n  const [modalShow, setModalShow] = React.useState(true);\n    const [intubated, setIntubated] = React.useState(true)\n  return (\n    <>\n      {/* <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n          Launch vertically centered modal\n        </Button> */}\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        intubated={intubated}\n        setIntubated={()=>setIntubated(!intubated)}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/orders.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/auth.js",["417"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/drugs.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Navigator.js",[],["418","419"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/careplan.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/careplans.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DateTime.js",["420","421"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assessment.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/PatientCarePlan.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/auth.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/LoadingCard.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/employee.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ATD.js",["422"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/ATDNavigator.js",[],["423","424"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Discharge.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Transfers.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Admitting.js",[],["425","426"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/drug.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/History.js",["427","428","429","430","431","432","433","434"],"import React, { Component, useState } from \"react\";\nimport { Card, Col, Table, Button, Modal, Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nfunction MyHistoryCharts(props) {\n\n  const arrayForInfo = [\n    \"vitals\",\n    \"pains\",\n    // \"dailycares\",\n    \"intakeoutputs\",\n    // \"medications\",\n    \"labs\",\n    // \"nursings\",\n    // \"consults\",\n    // \"imagings\",\n    \"diets\",\n    // \"transfers\",\n    // \"admitting\",\n    // \"educations\",\n    \"rxes\",\n    // \"shift_assessments\",\n    // \"shift_notes\",\n    // \"summaries\",\n    // \"transfers\",\n    // \"care_plans\",\n  ];\n\n  const tables = arrayForInfo.map((cat) => {\n    if (props.historyInfo[0][cat]) {\n      console.log(props.historyInfo[0][cat].length === 0);\n      if (props.historyInfo[0][cat].length !== 0) {\n        return (\n          <Table striped bordered hover>\n            <thead>\n              <tr >\n                {Object.keys(props.historyInfo[0][cat][0]).map((stuff) => {\n                  return <th>{stuff}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n              {Object.keys(props.historyInfo[0][cat][0]).map((stuff) => {\n                   props.historyInfo[0][cat].map(asd=>{\n                      console.log(props.historyInfo[0].cat.stuff.asd)\n                  });\n                })}\n              </tr>\n            </tbody>\n          </Table>\n        );\n      }\n    }\n  });\n  return (\n    <Modal\n      {...props}\n      centered\n    style={{overflow: \"scroll\" }}\n      dialogClassName=\"modal-10w\"\n\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Patient History\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {tables}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function HistoryChart(props) {\n    const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setShow(true)} >\n        History\n      </Button>\n\n      <MyHistoryCharts\n       show={show}\n       onHide={() => setShow(false)}\n       dialogClassName=\"modal-90w\"\n       aria-labelledby=\"example-custom-modal-styling-title\"\n        // show={modalShow}\n        // onHide={() => setModalShow(false)}\n        historyInfo={props.historyInfo}\n        // dialogClassName=\"modal-90w\"\n        // aria-labelledby=\"example-custom-modal-styling-title\"\n      />\n    </>\n  );\n}\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/SelfCreateUser.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/patients.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Patient.js",["435"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport { SignOutIcon } from \"@primer/octicons-react\";\nimport { logoutUser } from \"../actions/users\";\nimport EditUser from \"../components/forms/EditUser\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Patient extends Component {\n\n  state = {\n    edit: \"\",\n  };\n\n  billingInfo = [\n    \"billing_address\",\n    \"billing_address_2\",\n    \"billing_city\",\n    \"billing_state\",\n    \"billing_zip\",\n  ];\n  personalInfo = [\n    \"first_name\",\n    \"last_name\",\n    \"street_address\",\n    \"street_address_2\",\n    \"city\",\n    \"state\",\n    \"zip\",\n    \"home_phone\",\n    \"cell_phone\",\n    \"email\",\n  ];\n\n  healthInsInfo = [\n    \"health_insurance_provider\",\n    \"health_insurance_policy_number\",\n    \"health_insurance_id\",\n  ];\n\n  emergencyCont = [\n    \"emergency_contact_name\",\n    \"emergency_contact_relationship\",\n    \"emergency_contact_phone\",\n  ];\n\n  handleLogout = () => {\n    localStorage.removeItem(\"my_app_token\");\n    this.props.logoutUser();\n  };\n\n  editType = () => {\n    switch (this.state.edit) {\n      case \"billing\":\n        return <EditUser arrayKeys={this.billingInfo} />;\n      case \"personal\":\n        return <EditUser arrayKeys={this.personalInfo} />;\n\n      case \"health\":\n        return <EditUser arrayKeys={this.healthInsInfo} />;\n\n      case \"emergency\":\n        return <EditUser arrayKeys={this.emergencyCont} />;\n      default:\n        return null;\n    }\n  };\n\n  handleClick = (event) => {\n    this.setState({\n      edit: event.target.name,\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"mainRow\">\n          <Col className=\"columnRight\">\n            Patient Info:\n            <div>Username: {this.props.username}</div>\n            <div>\n              {this.props.first_name} {this.props.last_name}\n            </div>\n            <div>{this.props.last_name}</div>\n            <div\n              onClick={(e) => {\n                this.handleClick(e);\n              }}\n            >\n              <button as={Row} className=\"mb-2\" variant=\"dark\" name=\"personal\">\n                Edit Personal Information\n              </button>\n              <button as={Row} className=\"mb-2\" variant=\"dark\" name=\"health\">\n                Health Insurance\n              </button>\n              <button as={Row} className=\"mb-2\" variant=\"dark\" name=\"emergency\">\n                Emergency Contact\n              </button>\n              <button as={Row} className=\"mb-2\" variant=\"dark\" name=\"billing\">\n                Edit Billing Address\n              </button>\n            </div>\n            <Row>\n              <div onClick={() => this.handleLogout()}>\n                <SignOutIcon type=\"button\" size={35} />\n              </div>\n            </Row>\n          </Col>\n          <Col lg={10} className=\"centerColumn\">\n            Print\n            {this.editType()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state.user,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(\n  withRouter(Patient)\n);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assignments.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateAdmission.js",["436","437","438"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/Agreement.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateNewPatientFoms.js",["439","440"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Summary.js",["441","442"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateEmployee.js",["443"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreateUser.js",["444"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/EditUser.js",["445","446"],{"ruleId":"447","severity":1,"message":"448","line":4,"column":21,"nodeType":"449","messageId":"450","endLine":4,"endColumn":30},{"ruleId":"447","severity":1,"message":"451","line":4,"column":37,"nodeType":"449","messageId":"450","endLine":4,"endColumn":46},{"ruleId":"447","severity":1,"message":"452","line":155,"column":7,"nodeType":"449","messageId":"450","endLine":155,"endColumn":25},{"ruleId":"447","severity":1,"message":"453","line":9,"column":3,"nodeType":"449","messageId":"450","endLine":9,"endColumn":13},{"ruleId":"447","severity":1,"message":"452","line":307,"column":7,"nodeType":"449","messageId":"450","endLine":307,"endColumn":25},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"447","severity":1,"message":"458","line":10,"column":3,"nodeType":"449","messageId":"450","endLine":10,"endColumn":7},{"ruleId":"447","severity":1,"message":"459","line":11,"column":3,"nodeType":"449","messageId":"450","endLine":11,"endColumn":10},{"ruleId":"447","severity":1,"message":"452","line":310,"column":7,"nodeType":"449","messageId":"450","endLine":310,"endColumn":25},{"ruleId":"454","replacedBy":"460"},{"ruleId":"456","replacedBy":"461"},{"ruleId":"447","severity":1,"message":"453","line":5,"column":3,"nodeType":"449","messageId":"450","endLine":5,"endColumn":13},{"ruleId":"447","severity":1,"message":"462","line":8,"column":3,"nodeType":"449","messageId":"450","endLine":8,"endColumn":6},{"ruleId":"447","severity":1,"message":"458","line":10,"column":3,"nodeType":"449","messageId":"450","endLine":10,"endColumn":7},{"ruleId":"447","severity":1,"message":"459","line":11,"column":3,"nodeType":"449","messageId":"450","endLine":11,"endColumn":10},{"ruleId":"447","severity":1,"message":"463","line":14,"column":10,"nodeType":"449","messageId":"450","endLine":14,"endColumn":23},{"ruleId":"447","severity":1,"message":"452","line":173,"column":7,"nodeType":"449","messageId":"450","endLine":173,"endColumn":25},{"ruleId":"454","replacedBy":"464"},{"ruleId":"456","replacedBy":"465"},{"ruleId":"447","severity":1,"message":"453","line":5,"column":3,"nodeType":"449","messageId":"450","endLine":5,"endColumn":13},{"ruleId":"447","severity":1,"message":"458","line":10,"column":3,"nodeType":"449","messageId":"450","endLine":10,"endColumn":7},{"ruleId":"447","severity":1,"message":"459","line":11,"column":3,"nodeType":"449","messageId":"450","endLine":11,"endColumn":10},{"ruleId":"447","severity":1,"message":"452","line":203,"column":7,"nodeType":"449","messageId":"450","endLine":203,"endColumn":25},{"ruleId":"454","replacedBy":"466"},{"ruleId":"456","replacedBy":"467"},{"ruleId":"447","severity":1,"message":"453","line":5,"column":5,"nodeType":"449","messageId":"450","endLine":5,"endColumn":15},{"ruleId":"447","severity":1,"message":"458","line":10,"column":5,"nodeType":"449","messageId":"450","endLine":10,"endColumn":9},{"ruleId":"447","severity":1,"message":"459","line":11,"column":5,"nodeType":"449","messageId":"450","endLine":11,"endColumn":12},{"ruleId":"447","severity":1,"message":"468","line":15,"column":10,"nodeType":"449","messageId":"450","endLine":15,"endColumn":18},{"ruleId":"447","severity":1,"message":"452","line":155,"column":7,"nodeType":"449","messageId":"450","endLine":155,"endColumn":25},{"ruleId":"447","severity":1,"message":"469","line":2,"column":35,"nodeType":"449","messageId":"450","endLine":2,"endColumn":38},{"ruleId":"454","replacedBy":"470"},{"ruleId":"456","replacedBy":"471"},{"ruleId":"447","severity":1,"message":"472","line":7,"column":14,"nodeType":"449","messageId":"450","endLine":7,"endColumn":16},{"ruleId":"447","severity":1,"message":"453","line":8,"column":3,"nodeType":"449","messageId":"450","endLine":8,"endColumn":13},{"ruleId":"447","severity":1,"message":"452","line":206,"column":7,"nodeType":"449","messageId":"450","endLine":206,"endColumn":25},{"ruleId":"454","replacedBy":"473"},{"ruleId":"456","replacedBy":"474"},{"ruleId":"447","severity":1,"message":"462","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":13},{"ruleId":"454","replacedBy":"475"},{"ruleId":"456","replacedBy":"476"},{"ruleId":"454","replacedBy":"477"},{"ruleId":"456","replacedBy":"478"},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"447","severity":1,"message":"453","line":5,"column":3,"nodeType":"449","messageId":"450","endLine":5,"endColumn":13},{"ruleId":"447","severity":1,"message":"459","line":11,"column":3,"nodeType":"449","messageId":"450","endLine":11,"endColumn":10},{"ruleId":"447","severity":1,"message":"452","line":298,"column":7,"nodeType":"449","messageId":"450","endLine":298,"endColumn":25},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"454","replacedBy":"480"},{"ruleId":"456","replacedBy":"481"},{"ruleId":"447","severity":1,"message":"472","line":15,"column":16,"nodeType":"449","messageId":"450","endLine":15,"endColumn":18},{"ruleId":"447","severity":1,"message":"482","line":1,"column":28,"nodeType":"449","messageId":"450","endLine":1,"endColumn":34},{"ruleId":"447","severity":1,"message":"483","line":4,"column":10,"nodeType":"449","messageId":"450","endLine":4,"endColumn":17},{"ruleId":"447","severity":1,"message":"458","line":7,"column":3,"nodeType":"449","messageId":"450","endLine":7,"endColumn":7},{"ruleId":"447","severity":1,"message":"462","line":8,"column":3,"nodeType":"449","messageId":"450","endLine":8,"endColumn":6},{"ruleId":"447","severity":1,"message":"448","line":9,"column":3,"nodeType":"449","messageId":"450","endLine":9,"endColumn":12},{"ruleId":"447","severity":1,"message":"484","line":14,"column":3,"nodeType":"449","messageId":"450","endLine":14,"endColumn":10},{"ruleId":"447","severity":1,"message":"485","line":15,"column":3,"nodeType":"449","messageId":"450","endLine":15,"endColumn":17},{"ruleId":"447","severity":1,"message":"486","line":16,"column":3,"nodeType":"449","messageId":"450","endLine":16,"endColumn":6},{"ruleId":"447","severity":1,"message":"487","line":17,"column":3,"nodeType":"449","messageId":"450","endLine":17,"endColumn":14},{"ruleId":"447","severity":1,"message":"488","line":26,"column":9,"nodeType":"449","messageId":"450","endLine":26,"endColumn":14},{"ruleId":"447","severity":1,"message":"448","line":12,"column":10,"nodeType":"449","messageId":"450","endLine":12,"endColumn":19},{"ruleId":"447","severity":1,"message":"462","line":2,"column":18,"nodeType":"449","messageId":"450","endLine":2,"endColumn":21},{"ruleId":"454","replacedBy":"489"},{"ruleId":"456","replacedBy":"490"},{"ruleId":"447","severity":1,"message":"448","line":5,"column":3,"nodeType":"449","messageId":"450","endLine":5,"endColumn":12},{"ruleId":"447","severity":1,"message":"491","line":7,"column":3,"nodeType":"449","messageId":"450","endLine":7,"endColumn":7},{"ruleId":"447","severity":1,"message":"452","line":146,"column":7,"nodeType":"449","messageId":"450","endLine":146,"endColumn":25},{"ruleId":"447","severity":1,"message":"492","line":1,"column":28,"nodeType":"449","messageId":"450","endLine":1,"endColumn":36},{"ruleId":"447","severity":1,"message":"493","line":8,"column":10,"nodeType":"449","messageId":"450","endLine":8,"endColumn":22},{"ruleId":"447","severity":1,"message":"494","line":321,"column":29,"nodeType":"449","messageId":"450","endLine":321,"endColumn":40},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"495","severity":1,"message":"496","line":94,"column":33,"nodeType":"497","messageId":"498","endLine":94,"endColumn":34},{"ruleId":"447","severity":1,"message":"452","line":109,"column":7,"nodeType":"449","messageId":"450","endLine":109,"endColumn":25},{"ruleId":"447","severity":1,"message":"448","line":6,"column":3,"nodeType":"449","messageId":"450","endLine":6,"endColumn":12},{"ruleId":"447","severity":1,"message":"491","line":8,"column":3,"nodeType":"449","messageId":"450","endLine":8,"endColumn":7},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"499","severity":1,"message":"500","line":54,"column":37,"nodeType":"501","messageId":"502","endLine":54,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":3,"column":20,"nodeType":"449","messageId":"450","endLine":3,"endColumn":29},{"ruleId":"454","replacedBy":"503"},{"ruleId":"456","replacedBy":"504"},{"ruleId":"447","severity":1,"message":"505","line":3,"column":10,"nodeType":"449","messageId":"450","endLine":3,"endColumn":17},{"ruleId":"495","severity":1,"message":"496","line":29,"column":41,"nodeType":"497","messageId":"498","endLine":29,"endColumn":42},{"ruleId":"454","replacedBy":"506"},{"ruleId":"456","replacedBy":"507"},{"ruleId":"447","severity":1,"message":"508","line":7,"column":10,"nodeType":"449","messageId":"450","endLine":7,"endColumn":19},{"ruleId":"447","severity":1,"message":"509","line":7,"column":21,"nodeType":"449","messageId":"450","endLine":7,"endColumn":33},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"454","replacedBy":"510"},{"ruleId":"456","replacedBy":"511"},{"ruleId":"454","replacedBy":"512"},{"ruleId":"456","replacedBy":"513"},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"447","severity":1,"message":"458","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":14},{"ruleId":"447","severity":1,"message":"462","line":2,"column":16,"nodeType":"449","messageId":"450","endLine":2,"endColumn":19},{"ruleId":"447","severity":1,"message":"491","line":2,"column":43,"nodeType":"449","messageId":"450","endLine":2,"endColumn":47},{"ruleId":"447","severity":1,"message":"505","line":3,"column":10,"nodeType":"449","messageId":"450","endLine":3,"endColumn":17},{"ruleId":"499","severity":1,"message":"514","line":29,"column":41,"nodeType":"501","messageId":"515","endLine":29,"endColumn":43},{"ruleId":"499","severity":1,"message":"500","line":44,"column":70,"nodeType":"501","messageId":"502","endLine":44,"endColumn":72},{"ruleId":"499","severity":1,"message":"500","line":45,"column":53,"nodeType":"501","messageId":"502","endLine":45,"endColumn":55},{"ruleId":"447","severity":1,"message":"516","line":3,"column":31,"nodeType":"449","messageId":"450","endLine":3,"endColumn":37},{"ruleId":"447","severity":1,"message":"462","line":2,"column":29,"nodeType":"449","messageId":"450","endLine":2,"endColumn":32},{"ruleId":"499","severity":1,"message":"514","line":104,"column":44,"nodeType":"501","messageId":"515","endLine":104,"endColumn":46},{"ruleId":"447","severity":1,"message":"452","line":230,"column":7,"nodeType":"449","messageId":"450","endLine":230,"endColumn":25},{"ruleId":"447","severity":1,"message":"462","line":1,"column":24,"nodeType":"449","messageId":"450","endLine":1,"endColumn":27},{"ruleId":"447","severity":1,"message":"517","line":10,"column":9,"nodeType":"449","messageId":"450","endLine":10,"endColumn":19},{"ruleId":"447","severity":1,"message":"462","line":3,"column":19,"nodeType":"449","messageId":"450","endLine":3,"endColumn":22},{"ruleId":"447","severity":1,"message":"469","line":3,"column":24,"nodeType":"449","messageId":"450","endLine":3,"endColumn":27},{"ruleId":"447","severity":1,"message":"462","line":2,"column":18,"nodeType":"449","messageId":"450","endLine":2,"endColumn":21},{"ruleId":"447","severity":1,"message":"462","line":2,"column":18,"nodeType":"449","messageId":"450","endLine":2,"endColumn":21},{"ruleId":"447","severity":1,"message":"462","line":2,"column":18,"nodeType":"449","messageId":"450","endLine":2,"endColumn":21},{"ruleId":"499","severity":1,"message":"500","line":17,"column":36,"nodeType":"501","messageId":"502","endLine":17,"endColumn":38},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","'InputGroup' is defined but never used.","no-native-reassign",["518"],"no-negated-in-lhs",["519"],"'Card' is defined but never used.","'Overlay' is defined but never used.",["518"],["519"],"'Col' is defined but never used.","'FormFunctions' is defined but never used.",["518"],["519"],["518"],["519"],"'DateTime' is defined but never used.","'Row' is defined but never used.",["518"],["519"],"'id' is assigned a value but never used.",["518"],["519"],["518"],["519"],["518"],["519"],"'Component' is defined but never used.",["518"],["519"],"'render' is defined but never used.","'NavLink' is defined but never used.","'Tooltip' is defined but never used.","'OverlayTrigger' is defined but never used.","'Nav' is defined but never used.","'NavbarBrand' is defined but never used.","'Login' is defined but never used.",["518"],["519"],"'Form' is defined but never used.","'useState' is defined but never used.","'HistoryChart' is defined but never used.","'historyInfo' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["518"],["519"],"'connect' is defined but never used.",["518"],["519"],"'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.",["518"],["519"],["518"],["519"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Button' is defined but never used.","'handleShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]