[{"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Dashboard.js":"1","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/employee/ReportPages.js":"2","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Pain.js":"3","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Vitals.js":"4","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IO.js":"5","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Diet.js":"6","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IV.js":"7","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/DailyCares.js":"8","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Medications.js":"9","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/OrdersNavigator.js":"10","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Labs.js":"11","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Nursing.js":"12","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Imaging.js":"13","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Consult.js":"14","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/AssessmentNavigator.js":"15","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftAssessment.js":"16","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/CarePlan.js":"17","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftNotes.js":"18","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Orders.js":"19","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Employee.js":"20","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/FormFunctions.js":"21","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Header.js":"22","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/App.js":"23","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreatePatient.js":"24","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Assessment.js":"25","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/employees.js":"26","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/ClaimAdmissions.js":"27","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/BrainPage.js":"28","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/users.js":"29","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Education.js":"30","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PrescripeRx.js":"31","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/HospitalAdmin.js":"32","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/MAR.js":"33","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/index.js":"34","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/admissions.js":"35","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/Profile.js":"36","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assessment.js":"37","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/admission.js":"38","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Admin.js":"39","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assignments.js":"40","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/UserCategories.js":"41","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/index.js":"42","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DeletePopUp.js":"43","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/patients.js":"44","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Login.js":"45","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/NewNote.js":"46","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/orders.js":"47","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/auth.js":"48","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/drugs.js":"49","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Navigator.js":"50","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/careplan.js":"51","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/careplans.js":"52","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DateTime.js":"53","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assessment.js":"54","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/PatientCarePlan.js":"55","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/auth.js":"56","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/LoadingCard.js":"57","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/employee.js":"58","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ATD.js":"59","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/ATDNavigator.js":"60","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Discharge.js":"61","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Transfers.js":"62","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Admitting.js":"63","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/drug.js":"64"},{"size":1087,"mtime":1609612008949,"results":"65","hashOfConfig":"66"},{"size":6740,"mtime":1609625771791,"results":"67","hashOfConfig":"66"},{"size":8279,"mtime":1609695193759,"results":"68","hashOfConfig":"66"},{"size":9430,"mtime":1609695367516,"results":"69","hashOfConfig":"66"},{"size":4228,"mtime":1609695183205,"results":"70","hashOfConfig":"66"},{"size":7303,"mtime":1609695536849,"results":"71","hashOfConfig":"66"},{"size":5410,"mtime":1609695191732,"results":"72","hashOfConfig":"66"},{"size":4133,"mtime":1609789797297,"results":"73","hashOfConfig":"66"},{"size":6093,"mtime":1609695259781,"results":"74","hashOfConfig":"66"},{"size":2046,"mtime":1609436981526,"results":"75","hashOfConfig":"66"},{"size":5742,"mtime":1609695211952,"results":"76","hashOfConfig":"66"},{"size":3325,"mtime":1609695281997,"results":"77","hashOfConfig":"66"},{"size":3028,"mtime":1609695244628,"results":"78","hashOfConfig":"66"},{"size":900,"mtime":1608736086729,"results":"79","hashOfConfig":"66"},{"size":1761,"mtime":1609436644061,"results":"80","hashOfConfig":"66"},{"size":345,"mtime":1607985689662,"results":"81","hashOfConfig":"66"},{"size":8199,"mtime":1609789980854,"results":"82","hashOfConfig":"66"},{"size":329,"mtime":1607985702724,"results":"83","hashOfConfig":"66"},{"size":2283,"mtime":1609625369614,"results":"84","hashOfConfig":"66"},{"size":1266,"mtime":1609546485238,"results":"85","hashOfConfig":"66"},{"size":1642,"mtime":1609100605604,"results":"86","hashOfConfig":"66"},{"size":7507,"mtime":1609789724633,"results":"87","hashOfConfig":"66"},{"size":1938,"mtime":1609613235816,"results":"88","hashOfConfig":"66"},{"size":4250,"mtime":1609189596981,"results":"89","hashOfConfig":"66"},{"size":1856,"mtime":1609626021749,"results":"90","hashOfConfig":"66"},{"size":110,"mtime":1609184628933,"results":"91","hashOfConfig":"66"},{"size":2863,"mtime":1609447682440,"results":"92","hashOfConfig":"66"},{"size":12175,"mtime":1609630355107,"results":"93","hashOfConfig":"66"},{"size":2695,"mtime":1609266761632,"results":"94","hashOfConfig":"66"},{"size":326,"mtime":1609617340816,"results":"95","hashOfConfig":"66"},{"size":3373,"mtime":1608757846922,"results":"96","hashOfConfig":"66"},{"size":4252,"mtime":1609546666730,"results":"97","hashOfConfig":"66"},{"size":308,"mtime":1607985665999,"results":"98","hashOfConfig":"66"},{"size":994,"mtime":1609363256821,"results":"99","hashOfConfig":"66"},{"size":629,"mtime":1609451478168,"results":"100","hashOfConfig":"66"},{"size":5914,"mtime":1609617444758,"results":"101","hashOfConfig":"66"},{"size":549,"mtime":1609621777946,"results":"102","hashOfConfig":"66"},{"size":804,"mtime":1609610084861,"results":"103","hashOfConfig":"66"},{"size":5375,"mtime":1609188450706,"results":"104","hashOfConfig":"66"},{"size":751,"mtime":1609621693355,"results":"105","hashOfConfig":"66"},{"size":869,"mtime":1609453545053,"results":"106","hashOfConfig":"66"},{"size":554,"mtime":1609746152133,"results":"107","hashOfConfig":"66"},{"size":1533,"mtime":1609175364602,"results":"108","hashOfConfig":"66"},{"size":976,"mtime":1609451353565,"results":"109","hashOfConfig":"66"},{"size":3701,"mtime":1609621696956,"results":"110","hashOfConfig":"66"},{"size":4306,"mtime":1609629932935,"results":"111","hashOfConfig":"66"},{"size":616,"mtime":1609693539657,"results":"112","hashOfConfig":"66"},{"size":673,"mtime":1609354503509,"results":"113","hashOfConfig":"66"},{"size":987,"mtime":1609105592369,"results":"114","hashOfConfig":"66"},{"size":2750,"mtime":1609745810627,"results":"115","hashOfConfig":"66"},{"size":1295,"mtime":1609786228409,"results":"116","hashOfConfig":"66"},{"size":655,"mtime":1609790226562,"results":"117","hashOfConfig":"66"},{"size":607,"mtime":1609460520861,"results":"118","hashOfConfig":"66"},{"size":377,"mtime":1609454652496,"results":"119","hashOfConfig":"66"},{"size":1495,"mtime":1609787373005,"results":"120","hashOfConfig":"66"},{"size":518,"mtime":1609455155612,"results":"121","hashOfConfig":"66"},{"size":338,"mtime":1608741914561,"results":"122","hashOfConfig":"66"},{"size":1099,"mtime":1609451349265,"results":"123","hashOfConfig":"66"},{"size":1341,"mtime":1609796715272,"results":"124","hashOfConfig":"66"},{"size":1265,"mtime":1609796761019,"results":"125","hashOfConfig":"66"},{"size":377,"mtime":1609796350598,"results":"126","hashOfConfig":"66"},{"size":376,"mtime":1609796352613,"results":"127","hashOfConfig":"66"},{"size":377,"mtime":1609796348421,"results":"128","hashOfConfig":"66"},{"size":214,"mtime":1608741739477,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s6i3yl",{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"160"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Dashboard.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/employee/ReportPages.js",["281","282","283"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigator from \"../../components/Navigator\";\nimport { Card, Col, Container, Row, ListGroup } from \"react-bootstrap\";\nimport { Switch, withRouter } from \"react-router-dom\";\nimport Summary from \"../../components/tabs/MainTabs/Summary\";\nimport Assessment from \"../../components/tabs/MainTabs/Assessment\";\nimport ATD from \"../../components/tabs/MainTabs/ATD\";\nimport CarePlan from \"../../components/tabs/MainTabs/CarePlan\";\nimport Education from \"../../components/tabs/MainTabs/Education\";\nimport MAR from \"../../components/tabs/MainTabs/MAR\";\nimport Orders from \"../../components/tabs/MainTabs/Orders\";\nimport ShiftAssessment from \"../../components/tabs/MainTabs/ShiftAssessment\";\nimport ShiftNotes from \"../../components/tabs/MainTabs/ShiftNotes\";\nimport { setCurrentAdmission } from \"../../actions/admission\";\nimport { setCurrentPatient } from \"../../actions/patients\";\nimport LoadingCard from \"../../components/hooks/LoadingCard\";\n\nclass ReportPages extends Component {\n  //   componentDidMount() {\n  //     this.props.setCurrentAdmission(this.props.location.state.admission);\n  //     this.props.setCurrentPatient(this.props.location.state.patient);\n  //   }\n\n  //   componentDidUpdate(){\n  //     this.props.setCurrentAdmission(this.props.location.state.admission);\n  //     this.props.setCurrentPatient(this.props.location.state.patient);\n  //   }\n\n  render() {\n    console.log(this.props.location.state);\n    console.log(this.props);\n    return (\n      <Row style={{ margin: \"1rem\" }}>\n        {this.props.currentAdmission && this.props.currentPatient ? (\n          <>\n            <Col md=\"2\">\n              <Card\n                className=\"card-shadow\"\n                style={{ height: \"90vh\", overflow: \"scroll\" }}\n              >\n                <Card.Header>\n                  <strong>Patient Information</strong>\n                </Card.Header>\n                <Card.Body>\n                  <strong>Name:</strong> <br />\n                  {this.props.currentPatient.first_name}{\" \"}\n                  {this.props.currentPatient.last_name}\n                  <hr />\n                  <strong>Room:</strong>{\" \"}\n                  {this.props.currentAdmission.current_room}\n                  <hr />\n                  <strong>Admission:</strong>\n                  <br />\n                  {this.props.currentAdmission.admission_date}\n                  <hr />\n                  <strong>Diagnosis:</strong>{\" \"}\n                  {this.props.currentAdmission.admitting_diagnosis}\n                  <hr />\n                  <strong>Address:</strong> <br />\n                  {this.props.currentPatient.street_address}{\" \"}\n                  {this.props.currentPatient.street_address_2}\n                  <br />\n                  {this.props.currentPatient.city}\n                  <br />\n                  {this.props.currentPatient.state}\n                  <br />\n                  {this.props.currentPatient.zip}\n                  <hr />\n                  <strong>Contact:</strong>\n                  <br />\n                  {this.props.currentPatient.cell_phone}\n                  <br />\n                  {this.props.currentPatient.home_phone}\n                  <br />\n                  {this.props.currentPatient.email}\n                  <hr />\n                  <strong>Emergency Contact:</strong>\n                  <br />\n                  {this.props.currentPatient.emergency_contact_name}\n                  <br />\n                  {this.props.currentPatient.emergency_contact_phone}\n                  <br />\n                  {this.props.currentPatient.emergency_contact_relationship}\n                  <br />\n                  {this.props.currentPatient.zip}\n                  <hr />\n                  <strong>Share Info PPL:</strong>\n                  {this.props.currentAdmission.who_authorized_share}\n                  <hr />\n                  <strong>Insurance:</strong> <br />\n                  {this.props.currentPatient.health_insurance_provider}\n                  <br />\n                  id: {this.props.currentPatient.health_insurance_id}\n                  <br />#{\" \"}\n                  {this.props.currentPatient.health_insurance_policy_number}\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card className=\"card-shadow\" style={{ height: \"90vh\" }}>\n                <Card.Header>\n                  <Navigator info={this.props.location.state} />\n                </Card.Header>\n                <Card.Body style={{ padding: \"5px\" }}>\n                  <Switch>\n                    <Assessment\n                      exact\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/assessment*`}\n                    />\n                    <Summary\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/summary*`}\n                    />\n                    <CarePlan\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/careplan*`}\n                    />\n                    <ATD\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/atd*`}\n                    />\n                    <Education\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/education*`}\n                    />\n                    <MAR\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/mar*`}\n                    />\n                    <Orders\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders*`}\n                    />\n                    <ShiftAssessment\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/shiftassessment*`}\n                    />\n                    <ShiftNotes\n                      path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/shiftnotes*`}\n                    />\n                  </Switch>\n                </Card.Body>\n              </Card>\n            </Col>\n          </>\n        ) : (\n          <LoadingCard />\n        )}\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admissions: state.admissions.array,\n  currentAdmission: state.admissions.currentAdmission,\n  currentPatient: state.patients.currentPatient,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {\n  setCurrentPatient,\n  setCurrentAdmission,\n})(withRouter(ReportPages));\n",["284","285"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Pain.js",["286","287"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Vitals.js",["288","289","290"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\n\nclass Vitals extends Component {\n  state = {\n    bp_systolic: \"\",\n    bp_diastolic: \"\",\n    bp_site: \"\",\n    bp_position: \"\",\n    bp_type: \"\",\n    hr_type: \"\",\n    hr_bpm: \"\",\n    hr_quality: \"\",\n    temp_site: \"\",\n    temp_degree: \"\",\n    rr_hr: \"\",\n    rr_rrmin: \"\",\n    rr_quality: \"\",\n    o2_saturation: \"\",\n    o2_source: \"\",\n    o2_site: \"\",\n    admission_id: this.props.admission.id,\n    author: this.props.user.id.toString(),\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateAssessment(token, \"vitals\", { vital: this.state });\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  myFunction = () => {\n    var popup = document.getElementById(\"myPopup\");\n    popup.classList.toggle(\"show\");\n  };\n\n  render() {\n    console.log(this.props);\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    console.log(this.state);\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {formLabel(\"Blood Pressure\")}\n                {formLabel(\"Systolic/Diastolic\")}\n                <InputGroup>\n                  <Form.Control type=\"number\" value={this.state.systolic} />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">/</InputGroup.Text>\n                  </InputGroup.Append>\n                  <Form.Control type=\"number\" value={this.state.diastolic} />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">mm/Hg</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"BP Site\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_site}\n                  className=\"mb-3\"\n                  name=\"bp_site\"\n                >\n                  {this.generateOptions(\"bp_site\", [\n                    \"Upper Right Arm\",\n                    \"Lower Right Arm\",\n                    \"Upper Left Arm\",\n                    \"Lower Left Arm\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"BP Position\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_position}\n                  className=\"mb-3\"\n                  name=\"bp_position\"\n                >\n                  {this.generateOptions(\"bp_position\", [\n                    \"Laying Down\",\n                    \"Sitting Up\",\n                    \"Standing Up\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"BP type\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_type}\n                  className=\"mb-3\"\n                  name=\"bp_type\"\n                >\n                  {this.generateOptions(\"bp_type\", [\n                    \"Manual\",\n                    \"Automatic\",\n                    \"Doppler\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Heart Rate\")}\n                {formLabel(\"HR Type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.hr_type}\n                  className=\"mb-3\"\n                  name=\"hr_type\"\n                >\n                  {this.generateOptions(\"hr_type\", [\"Monitor\", \"Manual\"])}\n                </Form.Control>\n                {formLabel(\"HR BPM\")}{\" \"}\n                <InputGroup>\n                  <Form.Control type=\"number\" placeholder=\"HR\" />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">bpm</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"HR Quality\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.hr_quality}\n                  className=\"mb-3\"\n                  name=\"hr_quality\"\n                >\n                  {this.generateOptions(\"hr_quality\", [\"Regular\", \"Irregular\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Temperature\")}\n                {formLabel(\"Temp. Site\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.temp_site}\n                  className=\"mb-3\"\n                  name=\"temp_site\"\n                >\n                  {this.generateOptions(\"temp_site\", [\"Under Arm\", \"Mouth\"])}\n                </Form.Control>\n                {formLabel(\"Temperature Degrees\")}\n                <Form.Control\n                  type=\"number\"\n                  value={this.state.temp_degree}\n                  className=\"mb-3\"\n                  name=\"temp_degree\"\n                />\n                {formLabel(\"Respiration Rate\")}\n                {formLabel(\"RR-HR\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.rr_hr}\n                  className=\"mb-3\"\n                  name=\"rr_hr\"\n                >\n                  {this.generateOptions(\"rr_hr\", [\n                    \"Regular\",\n                    \"Labored\",\n                    \"Shallow\",\n                    \"Irregular\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"RR/min\")}{\" \"}\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    value={this.state.rr_rrmin}\n                    className=\"mb-3\"\n                    name=\"rr_rrmin\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">RR/min</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"RR Quality\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.rr_quality}\n                  name=\"rr_quality\"\n                >\n                  {this.generateOptions(\"rr_quality\", [\"Regular\", \"Irregular\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Oxygen\")}\n                {formLabel(\"O2 Saturation\")}\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    value={this.state.o2_saturation}\n                    name=\"o2_saturation\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>sat%</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n\n                {formLabel(\"O2 Source\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.o2_source}\n                  name=\"o2_source\"\n                >\n                  {this.generateOptions(\"o2_source\", [\n                    \"None (Room Air)\",\n                    \"Nasal Canula\",\n                    \"Nasal Canula: Hi Flow\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"O2 Site\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.o2_site}\n                  name=\"o2_site\"\n                >\n                  {this.generateOptions(\"o2_site\", [\"????\", \"????\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n            <Row className=\"justify-content-end\">\n              <Button\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  border: \"solid\",\n                  color: \"#1761a0\",\n                }}\n              >\n                Submit Assessment\n              </Button>\n            </Row>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateAssessment })(Vitals);\n",["291","292"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IO.js",["293","294","295","296","297","298"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Diet.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IV.js",["299","300","301","302"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport DateTime from \"../../hooks/DateTime\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\n\nclass IV extends Component {\n  state = {\n    admission_id: this.props.admission.id,\n    author: this.props.user.username,\n    iv_type: \"\",\n    dresssing_status: \"\",\n    site_status: \"\",\n    line_status: \"\",\n    dressing_change_due: \"\",\n    cap: \"\",\n  };\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n        dressing_change_due: event,\n    });\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state)\n    const token = localStorage.getItem(\"my_app_token\")\n    this.props.fetchCreateAssessment(token, \"ivs\", {iv: this.state})\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  render() {\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {formLabel(\"Blood Pressure\")}\n                {formLabel(\"IV Type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.iv_type}\n                  className=\"mb-3\"\n                  name=\"iv_type\"\n                >\n                  {this.generateOptions(\"iv_type\", [\n                    \"Bolus\",\n                    \"Infusion\",\n                    \"Secondary\",\n                    \"Lower Left Arm\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Dressing Status\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.dresssing_status}\n                  className=\"mb-3\"\n                  name=\"dresssing_status\"\n                >\n                  {this.generateOptions(\"dresssing_status\", [\n                    \"Clean\",\n                    \"Dry\",\n                    \"Intact\",\n                    \"Drainage\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Site Status\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.site_status}\n                  className=\"mb-3\"\n                  name=\"site_status\"\n                >\n                  {this.generateOptions(\"site_status\", [\n                    \"c|d|i\",\n                    \"red\",\n                    \"painful\",\n                    \"fragile\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Line Status\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.line_status}\n                  className=\"mb-3\"\n                  name=\"line_status\"\n                >\n                  {this.generateOptions(\"line_status\", [\n                    \"Flushed\",\n                    \"Saline locked\",\n                    \"Infusing\",\n                    \"Infiltrated\",\n                    \"Occluded\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Dressing Change Due\")}\n                <Form.Group>\n                <Form.Label>Schedule Start</Form.Label>\n\n                <DateTime\n                  date={this.state.dressing_change_due}\n                  handleDateChange={this.handleDateChange}\n                />\n              </Form.Group>\n\n                {formLabel(\"Cap on\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.cap}\n                  className=\"mb-3\"\n                  name=\"cap\"\n                >\n                  {this.generateOptions(\"cap\", [\"yes\", \"no\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admission: state.admissions.currentAdmission\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateAssessment})(IV);\n",["303","304"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/DailyCares.js",["305","306","307","308","309"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Medications.js",["310"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/OrdersNavigator.js",["311"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Labs.js",["312","313"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Nursing.js",[],["314","315"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Imaging.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Consult.js",["316"],"import React, { Component } from 'react'\nimport { Col, Row, Button, Form } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nclass Consult extends Component {\n    render() {\n        return (\n            <div>\n            <hr />\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  onClick={this.setSubmitTime}\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Order\n                </Button>\n              </Row>\n            </Form.Group>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Consult)\n",["317","318"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/AssessmentNavigator.js",[],["319","320"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftAssessment.js",["321"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/CarePlan.js",["322","323","324"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n  ListGroup,\n} from \"react-bootstrap\";\nimport { fetchAllCareplans, fetchCreateCarePlan } from \"../../../actions/careplan\";\nimport  PatientCarePlan  from \"../../forms/PatientCarePlan\";\n\nclass CarePlan extends Component {\n  state = {\n    author: this.props.user.id,\n    diagnosis_category: \"\",\n    nursing_diagnosis: \"\",\n    ocs: [],\n    acs: [],\n    admission_id: this.props.currentAdmission.id,\n  };\n\n  componentDidMount() {\n    if (this.props.careplans.length === 0) {\n      this.props.fetchAllCareplans();\n    }\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    if (event.target.type === \"checkbox\") {\n      if (event.target.name === \"ocs\") {\n        return this.setState({\n          ocs: this.state.ocs.concat(event.target.value),\n        });\n      } else if (event.target.name === \"acs\") {\n        return this.setState({\n          acs: this.state.acs.concat(event.target.value),\n        });\n      } else {\n        return null;\n      }\n    } else {\n      return this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n      dressing_change_due: event,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateCarePlan(token, {care_plan: this.state} );\n    this.setState({\n        author: this.props.user.id,\n        diagnosis_category: \"\",\n        nursing_diagnosis: \"\",\n        ocs: [],\n        acs: [],\n        admission_id: this.props.currentAdmission.id,\n    })\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n  formLabel = (props) => {\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={this.renderTooltip(props)}\n      >\n        <Form.Label as={Row} value={props} />\n      </OverlayTrigger>\n    );\n  };\n\n  nursing_diagnosis = () => {\n    if (this.state.diagnosis_category !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.map((c) => {\n        return c.name;\n      });\n      return this.generateOptions(\"nursing_diagnosis\", ni);\n    }\n  };\n\n  interventionsOptions = () => {\n    if (this.state.nursing_diagnosis !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.filter((c) => {\n        return c;\n      });\n      let xi = ni.find((n) => {\n        return n.name === this.state.nursing_diagnosis;\n      });\n      let yi = xi.interventions.map((i) => {\n        return i.item;\n      });\n\n      return (\n        <ListGroup style={{ padding: \"10px\" }}>\n          {yi.map((y) => {\n            return (\n              <ListGroup.Item>\n                <Form.Check\n                  type=\"checkbox\"\n                  id={`default-checkbox`}\n                  label={y}\n                  value={y}\n                  name=\"acs\"\n                />\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      );\n    }\n  };\n  goalsOptions = () => {\n    if (this.state.nursing_diagnosis !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.filter((c) => {\n        return c;\n      });\n      let xi = ni.find((n) => {\n        return n.name === this.state.nursing_diagnosis;\n      });\n      let yi = xi.goals.map((g) => {\n        return g.item;\n      });\n\n      return (\n        <ListGroup style={{ padding: \"10px\" }}>\n          {yi.map((y) => {\n            return (\n              <ListGroup.Item>\n                <Form.Check\n                  type=\"checkbox\"\n                  id={`default-checkbox`}\n                  label={y}\n                  value={y}\n                  name=\"ocs\"\n                />\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      );\n    }\n  };\n  eraseState = () => {\n    this.setState({\n      nursing_diagnosis: \"\",\n    });\n  };\n  render() {\n    console.log(this.state);\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    console.log(this.props)\n    return (\n      <Card style={{ height: \"100%\", overflow: \"scroll\" }}>\n        <Card.Body>\n            {true ?\n          <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Row md=\"2\" style={{ margin: \"0\" }}>\n                    <Form.Group as={Col}>\n                      {formLabel(\"Careplan Category\")}\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.diagnosis_category}\n                        className=\"mb-3\"\n                        name=\"diagnosis_category\"\n                        onChange={this.eraseState}\n                      >\n                        {this.generateOptions(\n                          \"diagnosis_category\",\n                          this.props.careplans.map((care) => {\n                            return care.name;\n                          })\n                        )}\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      {formLabel(\"Nursing Diagnosis\")}\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.nursing_diagnosis}\n                        className=\"mb-3\"\n                        name=\"nursing_diagnosis\"\n                      >\n                        {this.nursing_diagnosis()}\n                      </Form.Control>\n                    </Form.Group>\n                  </Row>\n\n                  <Form.Group>\n                    {this.state.nursing_diagnosis !== \"\"\n                      ? formLabel(\"Goals\")\n                      : null}\n                    {this.goalsOptions()}\n                  </Form.Group>\n                  <Form.Group>\n                    {this.state.nursing_diagnosis !== \"\"\n                      ? formLabel(\"Interventions\")\n                      : null}\n                    {this.interventionsOptions()}\n                  </Form.Group>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <hr />\n\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Care Plan\n                </Button>\n              </Row>\n            </Form.Group>\n          </Form>\n          :\n          <PatientCarePlan />}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admissions: state.admissions.array,\n  currentAdmission: state.admissions.currentAdmission,\n  currentPatient: state.patients.currentPatient,\n  careplans: state.careplans.array,\n  patientCareplan: state.careplans.patientCareplan\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchAllCareplans, fetchCreateCarePlan })(CarePlan);\n",["325","326"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftNotes.js",["327"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nconst ShiftNotes = () => {\n    return (\n        <div>\n            ShiftNotes\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShiftNotes)\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Orders.js",["328"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Employee.js",["329"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/FormFunctions.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Header.js",["330","331","332","333","334","335","336","337"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/App.js",["338"],"import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport Login from \"./app/components/Login\";\r\nimport Dashboard from \"./app/containers/Dashboard\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { currentUser } from \"./app/actions/auth\";\r\nimport Switch from \"react-bootstrap/esm/Switch\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { fetchAllDrugs } from \"./app/actions/drugs\";\r\nimport Header from \"./app/components/Header\";\r\n\r\nexport class App extends Component {\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"my_app_token\");\r\n\r\n    if (!token) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      fetch(\"http://localhost:3001/profile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n        //   localStorage.setItem(\"my_app_token\", data.jwt);\r\n          this.props.currentUser(data);\r\n          this.props.history.push(`/dashboard/${data.user.id}`);\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div fluid className=\"site-container\">\r\n        <div className=\"app-header\">\r\n          <Header renderAdd={this.renderAdd} />\r\n        </div>\r\n          <Switch style={{padding: \"0\"}}  >\r\n            <Route path={`/dashboard/${this.props.id}*`} component={Dashboard}  className=\"app-non-header\"/>\r\n            <Route exact path=\"/login\" component={Login} className=\"app-non-header\"/>\r\n          </Switch>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id: state.user.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, { currentUser, fetchAllDrugs })(\r\n  withRouter(App)\r\n);\r\n",["339","340"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreatePatient.js",["341"],"import React, { Component } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { createUserSuccess } from \"../../actions/auth\";\n\nclass CreatePatient extends Component {\n  state = {\n    authorization: \"\",\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    employee_id: \"\",\n    employee_type: \"\",\n    emergency_contact_name: \"\",\n    emergency_contact_relationship: \"\",\n    emergency_contact_phone: \"\",\n    health_insurance_provider: \"\",\n    health_insurance_policy_number: \"\",\n    health_insurance_id: \"\",\n    street_address: \"\",\n    street_address_2: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    home_phone: \"\",\n    cell_phone: \"\",\n    email: \"\",\n    billing_address: \"\",\n    billing_address_2: \"\",\n    billing_city: \"\",\n    billing_state: \"\",\n    billing_zip: \"\",\n  };\n\n  values = {\n    authorization: [\"\", \"hospital_admin\", \"employee\", \"patient\"],\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    employee_id: \"\",\n    employee_type: [\"\", \"dr\", \"pn\", \"pa\", \"rn\", \"tech\"],\n    emergency_contact_name: \"\",\n    emergency_contact_relationship: \"\",\n    emergency_contact_phone: \"\",\n    health_insurance_provider: \"\",\n    health_insurance_policy_number: \"\",\n    health_insurance_id: \"\",\n    street_address: \"\",\n    street_address_2: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    home_phone: \"\",\n    cell_phone: \"\",\n    email: \"\",\n    billing_address: \"\",\n    billing_address_2: \"\",\n    billing_city: \"\",\n    billing_state: \"\",\n    billing_zip: \"\",\n  };\n\n  componentDidMount() {\n    // return this.props.arrayKeys.map((key) => {\n    //   return this.setState({\n    //     [key]: this.props.key,\n    //   });\n    // });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  generateOptions = (place, [...props]) => {\n    return [...props].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  printForms = (keys) => {\n    return keys.map((k) => {\n      const uppercased = k.replace(k[0], k[0].toUpperCase());\n      if (Array.isArray(this.values[k])) {\n        return (\n          <Form.Group style={{ padding: \"10px\" }} controlId={k}>\n            <Form.Label>{uppercased}</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name={k}\n              value={this.state.k}\n              className=\"mb-3\"\n            >\n              {this.generateOptions(k, this.values[k])}\n            </Form.Control>\n          </Form.Group>\n        );\n      } else {\n        return (\n          <Form.Group style={{ padding: \"10px\" }} controlId={k}>\n            <Form.Label>{uppercased}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name={k}\n              className=\"mb-3\"\n              value={this.state[k]}\n            />\n          </Form.Group>\n        );\n      }\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createUserSuccess(this.state);\n\n  };\n\n  render() {\n\n    return (\n      <div className=\"scroll-page\">\n        <Row style={{margin: \"0\"}}>Create Patient</Row>\n        <Form\n          onChange={(e) => this.handleChange(e)}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Row lg={4} noGutters>\n            {this.printForms(Object.keys(this.state))}\n          </Row>\n          <Button variant=\"primary\" type=\"submit\">\n            Patient Create\n          </Button>\n          <Button variant=\"light\" onClick={this.props.handleBack}>\n            Back\n          </Button>\n        </Form>\n\n        <Container>\n          {this.props.createdUser ? (\n            <>\n              <Row>{this.props.createdUser.username}</Row>\n              <Row>{this.state.password}</Row>\n              <Row>{this.props.createdUser.authorization}</Row>\n            </>\n          ) : null}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  createdUser: state.user.createdUser,\n});\n\nexport default connect(mapStateToProps, { createUserSuccess })(CreatePatient);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Assessment.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/employees.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/ClaimAdmissions.js",["342","343","344","345","346","347"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/BrainPage.js",["348"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/users.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Education.js",["349"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PrescripeRx.js",["350","351"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\n\nconst PrescribeRx = (props) => {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Modal\n      size=\"xl\"\n        show={show}\n        backdrop=\"static\"\n        onHide={(handleClose, props.handleBack)}\n        // keyboard={false}\n        // dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Prescribe Rx: {props.rxToPrescribe.brand_name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onChange={props.generateRx} >\n              <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Route</Form.Label>\n              <Form.Control type=\"text\" name=\"route\" value={props.rx.route} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>IV Rate</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"iv_rate\"\n                value={props.rx.iv_rate}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Source Location</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"source_location\"\n                value={props.rx.source_location}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Dose</Form.Label>\n              <Form.Control type=\"text\" name=\"dose\" value={props.rx.dose} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Time Due</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"time_due\"\n                value={props.rx.time_due}\n              />\n            </Form.Group>\n            </Row>\n            <hr/>\n            <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Frequency</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"frequency\"\n                value={props.rx.frequency}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>PRN Reason</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"if_prn_reason\"\n                value={props.rx.if_prn_reason}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Duration</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"duration\"\n                value={props.rx.duration}\n              />\n            </Form.Group>\n            </Row>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={handleClose, props.createPrescription}\n          >\n            Prescribe\n          </Button>\n          <Button variant=\"primary\" onClick={(handleClose, props.handleBack)}>\n            Go Back\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, )(PrescribeRx);\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/HospitalAdmin.js",["352"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/MAR.js",["353"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/index.js",[],["354","355"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/admissions.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/Profile.js",["356"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assessment.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/admission.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Admin.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assignments.js",[],["357","358"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/UserCategories.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/index.js",[],["359","360"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DeletePopUp.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/patients.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Login.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/NewNote.js",["361"],"import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          //   type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n\nconsole.log(props)\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Critial-Care Pain Observation Tool\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Facial Expression</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Facial Expression\", [\n                \"0, Relaxed, neutral\",\n                \"2, Grimacing\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Body Movements</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Absence of Movements\",\n                \"1, Protection\",\n                \"2, Restlessness\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Muscle Tension</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Muscle Tension\", [\n                \"0, Relaxed\",\n                \"1, Tense, rigid\",\n                \"2, Very tense or rigid\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Press to Toggle Intubated?</Form.Label>\n            <Button\n              className=\"mb-3\"\n              name=\"scale_value\"\n              onClick={props.setIntubated}\n                >{props.intubated ? \"Yes\": \"No\"}</Button>\n          </Form.Group>\n\n{props.intubated ?\n          <Form.Group>\n            <Form.Label>Compliance with Ventilator</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Tolerating ventilator or movement\",\n                \"1, Coughing by tolerating\",\n                \"2, Fighting Ventilator\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n:\n          <Form.Group>\n            <Form.Label>Vocalization (extubated patients)</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Talking in normal tone or no sound\",\n                \"1, Sighing, moaning\",\n                \"2, Crying out, sobbing\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function CPOT() {\n  const [modalShow, setModalShow] = React.useState(true);\n    const [intubated, setIntubated] = React.useState(true)\n  return (\n    <>\n      {/* <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n          Launch vertically centered modal\n        </Button> */}\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        intubated={intubated}\n        setIntubated={()=>setIntubated(!intubated)}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/orders.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/auth.js",[],["362","363"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/drugs.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Navigator.js",[],["364","365"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/careplan.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/careplans.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DateTime.js",["366","367"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assessment.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/PatientCarePlan.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/auth.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/LoadingCard.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/employee.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ATD.js",["368"],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/ATDNavigator.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Discharge.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Transfers.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Admitting.js",[],"/Users/johnlovitsch/Desktop/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/drug.js",[],{"ruleId":"369","severity":1,"message":"370","line":4,"column":21,"nodeType":"371","messageId":"372","endLine":4,"endColumn":30},{"ruleId":"369","severity":1,"message":"373","line":4,"column":37,"nodeType":"371","messageId":"372","endLine":4,"endColumn":46},{"ruleId":"369","severity":1,"message":"374","line":155,"column":7,"nodeType":"371","messageId":"372","endLine":155,"endColumn":25},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"369","severity":1,"message":"379","line":9,"column":3,"nodeType":"371","messageId":"372","endLine":9,"endColumn":13},{"ruleId":"369","severity":1,"message":"374","line":307,"column":7,"nodeType":"371","messageId":"372","endLine":307,"endColumn":25},{"ruleId":"369","severity":1,"message":"380","line":10,"column":3,"nodeType":"371","messageId":"372","endLine":10,"endColumn":7},{"ruleId":"369","severity":1,"message":"381","line":11,"column":3,"nodeType":"371","messageId":"372","endLine":11,"endColumn":10},{"ruleId":"369","severity":1,"message":"374","line":310,"column":7,"nodeType":"371","messageId":"372","endLine":310,"endColumn":25},{"ruleId":"375","replacedBy":"382"},{"ruleId":"377","replacedBy":"383"},{"ruleId":"369","severity":1,"message":"379","line":5,"column":3,"nodeType":"371","messageId":"372","endLine":5,"endColumn":13},{"ruleId":"369","severity":1,"message":"384","line":8,"column":3,"nodeType":"371","messageId":"372","endLine":8,"endColumn":6},{"ruleId":"369","severity":1,"message":"380","line":10,"column":3,"nodeType":"371","messageId":"372","endLine":10,"endColumn":7},{"ruleId":"369","severity":1,"message":"381","line":11,"column":3,"nodeType":"371","messageId":"372","endLine":11,"endColumn":10},{"ruleId":"369","severity":1,"message":"385","line":14,"column":10,"nodeType":"371","messageId":"372","endLine":14,"endColumn":23},{"ruleId":"369","severity":1,"message":"374","line":173,"column":7,"nodeType":"371","messageId":"372","endLine":173,"endColumn":25},{"ruleId":"369","severity":1,"message":"379","line":5,"column":3,"nodeType":"371","messageId":"372","endLine":5,"endColumn":13},{"ruleId":"369","severity":1,"message":"380","line":10,"column":3,"nodeType":"371","messageId":"372","endLine":10,"endColumn":7},{"ruleId":"369","severity":1,"message":"381","line":11,"column":3,"nodeType":"371","messageId":"372","endLine":11,"endColumn":10},{"ruleId":"369","severity":1,"message":"374","line":203,"column":7,"nodeType":"371","messageId":"372","endLine":203,"endColumn":25},{"ruleId":"375","replacedBy":"386"},{"ruleId":"377","replacedBy":"387"},{"ruleId":"369","severity":1,"message":"379","line":5,"column":5,"nodeType":"371","messageId":"372","endLine":5,"endColumn":15},{"ruleId":"369","severity":1,"message":"380","line":10,"column":5,"nodeType":"371","messageId":"372","endLine":10,"endColumn":9},{"ruleId":"369","severity":1,"message":"381","line":11,"column":5,"nodeType":"371","messageId":"372","endLine":11,"endColumn":12},{"ruleId":"369","severity":1,"message":"388","line":15,"column":10,"nodeType":"371","messageId":"372","endLine":15,"endColumn":18},{"ruleId":"369","severity":1,"message":"374","line":155,"column":7,"nodeType":"371","messageId":"372","endLine":155,"endColumn":25},{"ruleId":"369","severity":1,"message":"389","line":2,"column":35,"nodeType":"371","messageId":"372","endLine":2,"endColumn":38},{"ruleId":"369","severity":1,"message":"390","line":7,"column":14,"nodeType":"371","messageId":"372","endLine":7,"endColumn":16},{"ruleId":"369","severity":1,"message":"379","line":8,"column":3,"nodeType":"371","messageId":"372","endLine":8,"endColumn":13},{"ruleId":"369","severity":1,"message":"374","line":206,"column":7,"nodeType":"371","messageId":"372","endLine":206,"endColumn":25},{"ruleId":"375","replacedBy":"391"},{"ruleId":"377","replacedBy":"392"},{"ruleId":"369","severity":1,"message":"384","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":13},{"ruleId":"375","replacedBy":"393"},{"ruleId":"377","replacedBy":"394"},{"ruleId":"375","replacedBy":"395"},{"ruleId":"377","replacedBy":"396"},{"ruleId":"369","severity":1,"message":"397","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},{"ruleId":"369","severity":1,"message":"379","line":5,"column":3,"nodeType":"371","messageId":"372","endLine":5,"endColumn":13},{"ruleId":"369","severity":1,"message":"381","line":11,"column":3,"nodeType":"371","messageId":"372","endLine":11,"endColumn":10},{"ruleId":"369","severity":1,"message":"374","line":298,"column":7,"nodeType":"371","messageId":"372","endLine":298,"endColumn":25},{"ruleId":"375","replacedBy":"398"},{"ruleId":"377","replacedBy":"399"},{"ruleId":"369","severity":1,"message":"397","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},{"ruleId":"369","severity":1,"message":"390","line":15,"column":16,"nodeType":"371","messageId":"372","endLine":15,"endColumn":18},{"ruleId":null,"fatal":true,"severity":2,"message":"400","line":17,"column":22},{"ruleId":"369","severity":1,"message":"401","line":1,"column":28,"nodeType":"371","messageId":"372","endLine":1,"endColumn":34},{"ruleId":"369","severity":1,"message":"380","line":7,"column":3,"nodeType":"371","messageId":"372","endLine":7,"endColumn":7},{"ruleId":"369","severity":1,"message":"384","line":8,"column":3,"nodeType":"371","messageId":"372","endLine":8,"endColumn":6},{"ruleId":"369","severity":1,"message":"370","line":9,"column":3,"nodeType":"371","messageId":"372","endLine":9,"endColumn":12},{"ruleId":"369","severity":1,"message":"402","line":14,"column":3,"nodeType":"371","messageId":"372","endLine":14,"endColumn":10},{"ruleId":"369","severity":1,"message":"403","line":15,"column":3,"nodeType":"371","messageId":"372","endLine":15,"endColumn":17},{"ruleId":"369","severity":1,"message":"404","line":16,"column":3,"nodeType":"371","messageId":"372","endLine":16,"endColumn":6},{"ruleId":"369","severity":1,"message":"405","line":17,"column":3,"nodeType":"371","messageId":"372","endLine":17,"endColumn":14},{"ruleId":"369","severity":1,"message":"370","line":12,"column":10,"nodeType":"371","messageId":"372","endLine":12,"endColumn":19},{"ruleId":"375","replacedBy":"406"},{"ruleId":"377","replacedBy":"407"},{"ruleId":"369","severity":1,"message":"384","line":2,"column":18,"nodeType":"371","messageId":"372","endLine":2,"endColumn":21},{"ruleId":"369","severity":1,"message":"389","line":3,"column":3,"nodeType":"371","messageId":"372","endLine":3,"endColumn":6},{"ruleId":"369","severity":1,"message":"384","line":4,"column":3,"nodeType":"371","messageId":"372","endLine":4,"endColumn":6},{"ruleId":"369","severity":1,"message":"370","line":5,"column":3,"nodeType":"371","messageId":"372","endLine":5,"endColumn":12},{"ruleId":"369","severity":1,"message":"408","line":7,"column":3,"nodeType":"371","messageId":"372","endLine":7,"endColumn":7},{"ruleId":"369","severity":1,"message":"380","line":9,"column":3,"nodeType":"371","messageId":"372","endLine":9,"endColumn":7},{"ruleId":"369","severity":1,"message":"374","line":106,"column":7,"nodeType":"371","messageId":"372","endLine":106,"endColumn":25},{"ruleId":"369","severity":1,"message":"409","line":1,"column":28,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"397","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"411","line":94,"column":33,"nodeType":"412","messageId":"413","endLine":94,"endColumn":34},{"ruleId":"369","severity":1,"message":"374","line":109,"column":7,"nodeType":"371","messageId":"372","endLine":109,"endColumn":25},{"ruleId":"369","severity":1,"message":"408","line":8,"column":3,"nodeType":"371","messageId":"372","endLine":8,"endColumn":7},{"ruleId":"369","severity":1,"message":"397","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},{"ruleId":"375","replacedBy":"414"},{"ruleId":"377","replacedBy":"415"},{"ruleId":"416","severity":1,"message":"417","line":54,"column":37,"nodeType":"418","messageId":"419","endLine":54,"endColumn":39},{"ruleId":"375","replacedBy":"420"},{"ruleId":"377","replacedBy":"421"},{"ruleId":"375","replacedBy":"422"},{"ruleId":"377","replacedBy":"423"},{"ruleId":"369","severity":1,"message":"424","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":17},{"ruleId":"375","replacedBy":"425"},{"ruleId":"377","replacedBy":"426"},{"ruleId":"375","replacedBy":"427"},{"ruleId":"377","replacedBy":"428"},{"ruleId":"369","severity":1,"message":"429","line":7,"column":10,"nodeType":"371","messageId":"372","endLine":7,"endColumn":19},{"ruleId":"369","severity":1,"message":"430","line":7,"column":21,"nodeType":"371","messageId":"372","endLine":7,"endColumn":33},{"ruleId":"369","severity":1,"message":"397","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","no-native-reassign",["431"],"no-negated-in-lhs",["432"],"'InputGroup' is defined but never used.","'Card' is defined but never used.","'Overlay' is defined but never used.",["431"],["432"],"'Col' is defined but never used.","'FormFunctions' is defined but never used.",["431"],["432"],"'DateTime' is defined but never used.","'Row' is defined but never used.","'id' is assigned a value but never used.",["431"],["432"],["431"],["432"],["431"],["432"],"'Component' is defined but never used.",["431"],["432"],"Parsing error: Unexpected token\n\n  15 |   render() {\n  16 |     return (\n> 17 |       <div className-\"parent\">\n     |                      ^\n  18 |         <Switch >\n  19 |           <BrainPage\n  20 |             exact","'render' is defined but never used.","'Tooltip' is defined but never used.","'OverlayTrigger' is defined but never used.","'Nav' is defined but never used.","'NavbarBrand' is defined but never used.",["431"],["432"],"'Form' is defined but never used.","'useState' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["431"],["432"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["431"],["432"],["431"],["432"],"'connect' is defined but never used.",["431"],["432"],["431"],["432"],"'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]