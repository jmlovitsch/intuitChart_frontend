[{"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/index.js":"1","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assignments.js":"2","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/drugs.js":"3","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Employee.js":"4","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreatePatient.js":"5","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/MAR.js":"6","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Nursing.js":"7","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PrescripeRx.js":"8","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Header.js":"9","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Patient.js":"10","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/BrainPage.js":"11","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/SelfCreateUser.js":"12","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/Profile.js":"13","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Login.js":"14","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/App.js":"15","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/admissions.js":"16","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/Agreement.js":"17","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/History.js":"18","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ATD.js":"19","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Vitals.js":"20","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/NewNote.js":"21","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/index.js":"22","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/careplans.js":"23","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/users.js":"24","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Dashboard.js":"25","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Education.js":"26","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/DailyCares.js":"27","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assessment.js":"28","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/employee/ReportPages.js":"29","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Pain.js":"30","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Imaging.js":"31","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Medications.js":"32","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Diet.js":"33","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Labs.js":"34","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/ATDNavigator.js":"35","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/OrdersNavigator.js":"36","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Discharge.js":"37","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IV.js":"38","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Assessment.js":"39","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/ClaimAdmissions.js":"40","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Orders.js":"41","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/LoadingCard.js":"42","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/CarePlan.js":"43","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/FormFunctions.js":"44","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/auth.js":"45","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Admitting.js":"46","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/UserCategories.js":"47","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftAssessment.js":"48","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/drug.js":"49","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PdfPrinter.js":"50","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DeletePopUp.js":"51","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Transfers.js":"52","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DateTime.js":"53","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/patients.js":"54","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/orders.js":"55","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Summary.js":"56","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/PatientCarePlan.js":"57","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/user.js":"58","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftNotes.js":"59","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/vitals.js":"60","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Consult.js":"61"},{"size":554,"mtime":1609746152133,"results":"62","hashOfConfig":"63"},{"size":751,"mtime":1612906964107,"results":"64","hashOfConfig":"63"},{"size":1109,"mtime":1610462935021,"results":"65","hashOfConfig":"63"},{"size":1266,"mtime":1609546489379,"results":"66","hashOfConfig":"63"},{"size":4846,"mtime":1609871966764,"results":"67","hashOfConfig":"63"},{"size":1779,"mtime":1610462935024,"results":"68","hashOfConfig":"63"},{"size":3591,"mtime":1609959488767,"results":"69","hashOfConfig":"63"},{"size":3373,"mtime":1610053289732,"results":"70","hashOfConfig":"63"},{"size":9305,"mtime":1612909605255,"results":"71","hashOfConfig":"63"},{"size":11614,"mtime":1611598869195,"results":"72","hashOfConfig":"63"},{"size":7355,"mtime":1612907583211,"results":"73","hashOfConfig":"63"},{"size":4702,"mtime":1612905706908,"results":"74","hashOfConfig":"63"},{"size":8398,"mtime":1611598192441,"results":"75","hashOfConfig":"63"},{"size":4824,"mtime":1611598713244,"results":"76","hashOfConfig":"63"},{"size":2171,"mtime":1611607564207,"results":"77","hashOfConfig":"63"},{"size":1004,"mtime":1610462935027,"results":"78","hashOfConfig":"63"},{"size":24563,"mtime":1609866607257,"results":"79","hashOfConfig":"63"},{"size":2509,"mtime":1609808192245,"results":"80","hashOfConfig":"63"},{"size":1341,"mtime":1609796715272,"results":"81","hashOfConfig":"63"},{"size":9893,"mtime":1611605482938,"results":"82","hashOfConfig":"63"},{"size":4306,"mtime":1609629932935,"results":"83","hashOfConfig":"63"},{"size":994,"mtime":1609363256821,"results":"84","hashOfConfig":"63"},{"size":631,"mtime":1609948054721,"results":"85","hashOfConfig":"63"},{"size":2695,"mtime":1609266761632,"results":"86","hashOfConfig":"63"},{"size":1054,"mtime":1610462935026,"results":"87","hashOfConfig":"63"},{"size":2100,"mtime":1610462935024,"results":"88","hashOfConfig":"63"},{"size":4071,"mtime":1610058409683,"results":"89","hashOfConfig":"63"},{"size":650,"mtime":1609949373474,"results":"90","hashOfConfig":"63"},{"size":6770,"mtime":1611763995573,"results":"91","hashOfConfig":"63"},{"size":8636,"mtime":1610462935023,"results":"92","hashOfConfig":"63"},{"size":3292,"mtime":1609959473128,"results":"93","hashOfConfig":"63"},{"size":6588,"mtime":1612911148759,"results":"94","hashOfConfig":"63"},{"size":7636,"mtime":1609959463884,"results":"95","hashOfConfig":"63"},{"size":5742,"mtime":1609958751867,"results":"96","hashOfConfig":"63"},{"size":1265,"mtime":1609796761019,"results":"97","hashOfConfig":"63"},{"size":2046,"mtime":1609959492817,"results":"98","hashOfConfig":"63"},{"size":377,"mtime":1609796350598,"results":"99","hashOfConfig":"63"},{"size":5410,"mtime":1609695191732,"results":"100","hashOfConfig":"63"},{"size":1856,"mtime":1611605470709,"results":"101","hashOfConfig":"63"},{"size":3918,"mtime":1611606490951,"results":"102","hashOfConfig":"63"},{"size":2289,"mtime":1611606966131,"results":"103","hashOfConfig":"63"},{"size":353,"mtime":1611607072578,"results":"104","hashOfConfig":"63"},{"size":8482,"mtime":1611776371777,"results":"105","hashOfConfig":"63"},{"size":1642,"mtime":1609100605604,"results":"106","hashOfConfig":"63"},{"size":718,"mtime":1609860706097,"results":"107","hashOfConfig":"63"},{"size":377,"mtime":1609796348421,"results":"108","hashOfConfig":"63"},{"size":3487,"mtime":1611696320282,"results":"109","hashOfConfig":"63"},{"size":5799,"mtime":1611784296311,"results":"110","hashOfConfig":"63"},{"size":214,"mtime":1608741739477,"results":"111","hashOfConfig":"63"},{"size":541,"mtime":1609967101647,"results":"112","hashOfConfig":"63"},{"size":2202,"mtime":1609872634284,"results":"113","hashOfConfig":"63"},{"size":376,"mtime":1609796352613,"results":"114","hashOfConfig":"63"},{"size":607,"mtime":1609460520861,"results":"115","hashOfConfig":"63"},{"size":976,"mtime":1610053150279,"results":"116","hashOfConfig":"63"},{"size":684,"mtime":1609947556412,"results":"117","hashOfConfig":"63"},{"size":4788,"mtime":1611778036912,"results":"118","hashOfConfig":"63"},{"size":2588,"mtime":1611776007023,"results":"119","hashOfConfig":"63"},{"size":1449,"mtime":1611766517072,"results":"120","hashOfConfig":"63"},{"size":2094,"mtime":1611768255464,"results":"121","hashOfConfig":"63"},{"size":412,"mtime":1608651797544,"results":"122","hashOfConfig":"63"},{"size":1234,"mtime":1609959469397,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1g8cqxz",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"173"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"204"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"131"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"173"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"173"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"140"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/index.js",[],["288","289"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/assignments.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/drugs.js",[],["290","291"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Employee.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/CreatePatient.js",["292"],"import React, { Component } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createUserSuccess } from \"../../actions/auth\";\nimport { CreateNewPatientForms } from \"./CreateNewPatientFoms\";\n\nclass CreatePatient extends Component {\n  state = {\n    authorization: \"patient\",\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    employee_id: \"\",\n    employee_type: \"\",\n    emergency_contact_name: \"\",\n    emergency_contact_relationship: \"\",\n    emergency_contact_phone: \"\",\n    health_insurance_provider: \"\",\n    health_insurance_policy_number: \"\",\n    health_insurance_id: \"\",\n    street_address: \"\",\n    street_address_2: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    home_phone: \"\",\n    cell_phone: \"\",\n    email: \"\",\n    billing_address: \"\",\n    billing_address_2: \"\",\n    billing_city: \"\",\n    billing_state: \"\",\n    billing_zip: \"\",\n  };\n\n  values = {\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    employee_id: \"\",\n    employee_type: [\"\", \"dr\", \"pn\", \"pa\", \"rn\", \"tech\"],\n    emergency_contact_name: \"\",\n    emergency_contact_relationship: \"\",\n    emergency_contact_phone: \"\",\n    health_insurance_provider: \"\",\n    health_insurance_policy_number: \"\",\n    health_insurance_id: \"\",\n    street_address: \"\",\n    street_address_2: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    home_phone: \"\",\n    cell_phone: \"\",\n    email: \"\",\n    billing_address: \"\",\n    billing_address_2: \"\",\n    billing_city: \"\",\n    billing_state: \"\",\n    billing_zip: \"\",\n  };\n\n  componentDidMount() {\n    // return this.props.arrayKeys.map((key) => {\n    //   return this.setState({\n    //     [key]: this.props.key,\n    //   });\n    // });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  printForms = (keys) => {\n    return keys.map((k) => {\n      const uppercased = k.replace(k[0], k[0].toUpperCase());\n      if (Array.isArray(this.values[k])) {\n        return (\n          <Form.Group style={{ padding: \"10px\" }} controlId={k}>\n            <Form.Label>{uppercased}</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name={k}\n              value={this.state.k}\n              className=\"mb-3\"\n            >\n              {this.generateOptions(k, this.values[k])}\n            </Form.Control>\n          </Form.Group>\n        );\n      } else {\n        return (\n          <Form.Group style={{ padding: \"10px\" }} controlId={k}>\n            <Form.Label>{uppercased}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name={k}\n              className=\"mb-3\"\n              value={this.state[k]}\n            />\n          </Form.Group>\n        );\n      }\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createUserSuccess(this.state);\n\n  };\nsettingState = () => {\n    this.props.handleBack()\n}\n  render() {\n\n    return (\n\n      <div className=\"scroll-page\">\n            <CreateNewPatientForms settingState={this.settingState}/>\n        <Row style={{margin: \"0\"}}>Create Patient</Row>\n        <Form\n          onChange={(e) => this.handleChange(e)}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Row lg={4} noGutters>\n            {this.printForms(Object.keys(this.state))}\n          </Row>\n          <Button                     className=\"m-3\"\n                    style={{\n                      backgroundColor: \"transparent\",\n                      border: \"none\",\n                      color: \"#1761a0\",\n                    }}\n type=\"submit\">\n            Patient Create\n          </Button>\n          <Button                     className=\"m-3\"\n                    style={{\n                      backgroundColor: \"transparent\",\n                      border: \"none\",\n                      color: \"#1761a0\",\n                    }}\n onClick={this.props.handleBack}>\n            Back\n          </Button>\n        </Form>\n\n        <Container>\n          {this.props.createdUser ? (\n            <>\n              <Row>{this.props.createdUser.username}</Row>\n              <Row>{this.state.password}</Row>\n              <Row>{this.props.createdUser.authorization}</Row>\n            </>\n          ) : null}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  createdUser: state.user.createdUser,\n});\n\nexport default connect(mapStateToProps, { createUserSuccess })(withRouter(CreatePatient));\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/MAR.js",["293"],"import React, { Component } from 'react'\nimport { Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nconst MAR = (props) => {\n    console.log(props.rxes)\n\n    const renderDrugs = (props) => {\n        return props.map(rx=>{\n            return (\n                <div style={{overflow: \"scroll\", width: \"75vw\"}} >\n                  {/* <strong>{rx}</strong> */}\n                  <Table\n                    striped\n                    bordered\n                    hover\n                    style={{ border: \"5px solid #1761a0\", width: \"inherit\"}}\n                  >\n                    <thead>\n                      <tr>\n                        {Object.keys([rx][0]).map((c) => {\n                          return <th>{c}</th>;\n                        })}\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {[rx].map((c) => {\n                        // console.log(Object.keys(c)); array of cooresponding keys\n                        return (\n                          <tr>\n                            {/* {Object.keys(c).map((key) => {\n                              //   console.log(c.key);\n\n                              return <td>{c[key]}</td>; ///returns the values in cooresponding rows\n                            })} */}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </div>\n              );\n\n        })\n    }\n    return (\n        <div>\n            {renderDrugs(props.rxes)}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    rxes: state.admissions.currentAdmission.rxes\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MAR)\n",["294","295"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Nursing.js",["296"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Form, Row, Button } from \"react-bootstrap\";\nimport { fetchCreateOrder } from \"../../../actions/orders\";\n\nclass Nursing extends Component {\n  state = {\n    frequency: \"\",\n    duration: \"\",\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateOrder(token, \"nursings\", { nursing: this.state });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form\n          onChange={(event) => this.handleChange(event)}\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form.Group>\n              <Form.Label>Frequency</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                className=\"mb-3\"\n                name=\"frequency\"\n              >\n                {this.generateOptions(\"frequency\", [\n                  \"Shift\",\n                  \"Daily\",\n                  \"2x/shift\",\n                  \"As Tolerated\",\n                  \"Per Unit Routine (i.e. vitals)\",\n                  \"Once\",\n                  \"ACHS (i.e. accuchecks)\",\n                  \"with Meals\",\n                  \"3x/day\",\n                  \"Continuous\",\n                ])}\n              </Form.Control>\n            </Form.Group>\n            <hr />\n            <Form.Group>\n              <Form.Label>Duration</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                className=\"mb-3\"\n                name=\"duration\"\n              >\n                {this.generateOptions(\"roomService\", [\n                  \"until Discontinued\",\n                  \"Once\",\n                  \"#Hours\",\n                  \"#Days\",\n                  \"until Condition Met (i.e. CIWA < 6 for 24 hours\",\n                ])}\n              </Form.Control>\n            </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Comment</Form.Label>\n              </Form.Group>\n\n\n\n              <Form.Group>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Enter Any Notes...\"\n                  className=\"mb-3\"\n                  name=\"comment\"\n                ></Form.Control>\n              </Form.Group>\n              </Col>\n\n            <hr />\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Order\n                </Button>\n              </Row>\n            </Form.Group>\n\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admission: state.admissions.currentAdmission\n\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateOrder})(Nursing);\n",["297","298"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PrescripeRx.js",["299","300"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\n\nconst PrescribeRx = (props) => {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Modal\n      size=\"xl\"\n        show={show}\n        backdrop=\"static\"\n        onHide={(handleClose, props.handleBack)}\n        // keyboard={false}\n        // dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Prescribe Rx: {props.rxToPrescribe.brand_name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onChange={props.generateRx} >\n              <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Route</Form.Label>\n              <Form.Control type=\"text\" name=\"route\" value={props.rx.route} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>IV Rate</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"iv_rate\"\n                value={props.rx.iv_rate}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Source Location</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"source_location\"\n                value={props.rx.source_location}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Dose</Form.Label>\n              <Form.Control type=\"text\" name=\"dose\" value={props.rx.dose} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Time Due</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"time_due\"\n                value={props.rx.time_due}\n              />\n            </Form.Group>\n            </Row>\n            <hr/>\n            <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Frequency</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"frequency\"\n                value={props.rx.frequency}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>PRN Reason</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"if_prn_reason\"\n                value={props.rx.if_prn_reason}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Duration</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"duration\"\n                value={props.rx.duration}\n              />\n            </Form.Group>\n            </Row>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={handleClose, props.createPrescription}\n          >\n            Prescribe\n          </Button>\n          <Button variant=\"primary\" onClick={(handleClose, props.handleBack)}>\n            Go Back\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, )(PrescribeRx);\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Header.js",["301","302","303","304","305","306","307","308","309","310","311","312"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Patient.js",["313","314","315","316","317","318"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/BrainPage.js",["319","320"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/SelfCreateUser.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/Profile.js",["321"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/Login.js",[],["322","323"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/App.js",["324"],"import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport Login from \"./app/components/Login\";\r\nimport Dashboard from \"./app/containers/Dashboard\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { currentUser } from \"./app/actions/auth\";\r\nimport Switch from \"react-bootstrap/esm/Switch\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { fetchAllDrugs } from \"./app/actions/drugs\";\r\nimport Header from \"./app/components/Header\";\r\n\r\nexport class App extends Component {\r\n\r\n    state = {\r\n        username: \"\"\r\n    }\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"my_app_token\");\r\n\r\n    if (!token) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      fetch(\"http://localhost:3001/profile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n        //   localStorage.setItem(\"my_app_token\", data.jwt);\r\n          this.props.currentUser(data);\r\n          this.props.history.push(`/dashboard/${data.user.id}`);\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  setUsername = (p) => {\r\n    this.setState({\r\n        username: p\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n      console.log(this.state)\r\n    return (\r\n      <div className=\"site-container\">\r\n        <div className=\"app-header\">\r\n          <Header renderAdd={this.renderAdd} setUsername={this.setUsername}/>\r\n        </div >\r\n          <Switch className=\"bg\" style={{padding: \"0\"}} >\r\n            <Route path={`/dashboard/${this.props.id}*`} component={Dashboard}  className=\"app-non-header\"/>\r\n\r\n            <Route exact path=\"/login\" component={Login} newUsername={this.state.username} className=\"app-non-header\"/>\r\n          </Switch>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id: state.user.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, { currentUser, fetchAllDrugs })(\r\n  withRouter(App)\r\n);\r\n",["325","326"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/admissions.js",[],["327","328"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/Agreement.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/History.js",["329","330","331","332","333","334","335","336"],"import React, { Component, useState } from \"react\";\nimport { Card, Col, Table, Button, Modal, Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nfunction MyHistoryCharts(props) {\n\n  const arrayForInfo = [\n    \"vitals\",\n    \"pains\",\n    // \"dailycares\",\n    \"intakeoutputs\",\n    // \"medications\",\n    \"labs\",\n    // \"nursings\",\n    // \"consults\",\n    // \"imagings\",\n    \"diets\",\n    // \"transfers\",\n    // \"admitting\",\n    // \"educations\",\n    \"rxes\",\n    // \"shift_assessments\",\n    // \"shift_notes\",\n    // \"summaries\",\n    // \"transfers\",\n    // \"care_plans\",\n  ];\n\n  const tables = arrayForInfo.map((cat) => {\n    if (props.historyInfo[0][cat]) {\n      console.log(props.historyInfo[0][cat].length === 0);\n      if (props.historyInfo[0][cat].length !== 0) {\n        return (\n          <Table striped bordered hover>\n            <thead>\n              <tr >\n                {Object.keys(props.historyInfo[0][cat][0]).map((stuff) => {\n                  return <th>{stuff}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n              {Object.keys(props.historyInfo[0][cat][0]).map((stuff) => {\n                   props.historyInfo[0][cat].map(asd=>{\n                      console.log(props.historyInfo[0].cat.stuff.asd)\n                  });\n                })}\n              </tr>\n            </tbody>\n          </Table>\n        );\n      }\n    }\n  });\n  return (\n    <Modal\n      {...props}\n      centered\n    style={{overflow: \"scroll\" }}\n      dialogClassName=\"modal-10w\"\n\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Patient History\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {tables}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function HistoryChart(props) {\n    const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setShow(true)} >\n        History\n      </Button>\n\n      <MyHistoryCharts\n       show={show}\n       onHide={() => setShow(false)}\n       dialogClassName=\"modal-90w\"\n       aria-labelledby=\"example-custom-modal-styling-title\"\n        // show={modalShow}\n        // onHide={() => setModalShow(false)}\n        historyInfo={props.historyInfo}\n        // dialogClassName=\"modal-90w\"\n        // aria-labelledby=\"example-custom-modal-styling-title\"\n      />\n    </>\n  );\n}\n",["337","338"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ATD.js",["339"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport Admitting from \"../ATD/Admitting\";\nimport ATDNavigator from \"../ATD/ATDNavigator\";\nimport Discharge from \"../ATD/Discharge\";\nimport Transfers from \"../ATD/Transfers\";\n\nconst ATD = (props) => {\n  return (\n    <Card style={{ height: \"100%\", overflow: \"scroll\" }}>\n      <Card.Header>\n       <ATDNavigator />\n      </Card.Header>\n      <Card.Body>\n        <Switch>\n          <Admitting\n            path={`/dashboard/${props.user.id}/admissions/${props.currentAdmission.id}/atd/admitting`}\n          />\n          <Transfers\n            exact\n            path={`/dashboard/${props.user.id}/admissions/${props.currentAdmission.id}/atd/transfers`}\n          />\n          <Discharge\n            exact\n            path={`/dashboard/${props.user.id}/admissions/${props.currentAdmission.id}/atd/discharge`}\n          />\n        </Switch>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admissions: state.admissions.array,\n  currentAdmission: state.admissions.currentAdmission,\n  currentPatient: state.patients.currentPatient,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ATD);\n",["340","341"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Vitals.js",["342","343","344"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\n\nclass Vitals extends Component {\n  state = {\n    bp_systolic: \"\",\n    bp_diastolic: \"\",\n    bp_site: \"\",\n    bp_position: \"\",\n    bp_type: \"\",\n    hr_type: \"\",\n    hr_bpm: \"\",\n    hr_quality: \"\",\n    temp_site: \"\",\n    temp_degree: \"\",\n    rr_hr: \"\",\n    rr_rrmin: \"\",\n    rr_quality: \"\",\n    o2_saturation: \"\",\n    o2_source: \"\",\n    o2_site: \"\",\n    admission_id: this.props.admission.id,\n    author: this.props.user.id.toString(),\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateAssessment(token, \"vitals\", { vital: this.state });\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  myFunction = () => {\n    var popup = document.getElementById(\"myPopup\");\n    popup.classList.toggle(\"show\");\n  };\n\n  render() {\n\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n          Last Four Entries:\n          {props.map(p=>{\n              return <p>{p}</p>\n          })}\n\n      </Tooltip>\n    );\n\n    const formLabel = (named, status) => {\n        const lastFour = this.props.admission.vitals.map(vital => {\n            return vital.[status]\n        })\n\n        const trueFour = lastFour.slice(-4)\n\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(trueFour)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {named}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    console.log(this.state);\n    return (\n      <div >\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {formLabel(\"Systolic\", \"bp_systolic\" )}\n                {formLabel(\"Diastolic\", \"bp_diastolic\" )}\n                <InputGroup>\n                  <Form.Control type=\"number\" name=\"bp_systolic\" value={this.state.systolic} />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">/</InputGroup.Text>\n                  </InputGroup.Append>\n                  <Form.Control type=\"number\" name=\"bp_diastolic\" value={this.state.diastolic} />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">mm/Hg</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"BP Site\", \"bp_site\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_site}\n                  className=\"mb-3\"\n                  name=\"bp_site\"\n                >\n                  {this.generateOptions(\"bp_site\", [\n                    \"Upper Right Arm\",\n                    \"Lower Right Arm\",\n                    \"Upper Left Arm\",\n                    \"Lower Left Arm\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"BP Position\", \"bp_position\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_position}\n                  className=\"mb-3\"\n                  name=\"bp_position\"\n                >\n                  {this.generateOptions(\"bp_position\", [\n                    \"Laying Down\",\n                    \"Sitting Up\",\n                    \"Standing Up\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"BP type\", \"bp_type\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.bp_type}\n                  className=\"mb-3\"\n                  name=\"bp_type\"\n                >\n                  {this.generateOptions(\"bp_type\", [\n                    \"Manual\",\n                    \"Automatic\",\n                    \"Doppler\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Heart Rate\" )}\n                {formLabel(\"HR Type\", \"hr_type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.hr_type}\n                  className=\"mb-3\"\n                  name=\"hr_type\"\n                >\n                  {this.generateOptions(\"hr_type\", [\"Monitor\", \"Manual\"])}\n                </Form.Control>\n                {formLabel(\"HR BPM\", \"hr_bpm\")}{\" \"}\n                <InputGroup>\n                  <Form.Control type=\"number\" placeholder=\"HR\" />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">bpm</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"HR Quality\", \"hr_quality\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.hr_quality}\n                  className=\"mb-3\"\n                  name=\"hr_quality\"\n                >\n                  {this.generateOptions(\"hr_quality\", [\"Regular\", \"Irregular\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Temperature\")}\n                {formLabel(\"Temp. Site\", \"temp_site\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.temp_site}\n                  className=\"mb-3\"\n                  name=\"temp_site\"\n                >\n                  {this.generateOptions(\"temp_site\", [\"Under Arm\", \"Mouth\"])}\n                </Form.Control>\n                {formLabel(\"Temperature Degrees\", \"temp_degree\")}\n                <Form.Control\n                  type=\"number\"\n                  value={this.state.temp_degree}\n                  className=\"mb-3\"\n                  name=\"temp_degree\"\n                />\n                {formLabel(\"Respiration Rate\", \"rr_hr\")}\n                {formLabel(\"RR-HR\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.rr_hr}\n                  className=\"mb-3\"\n                  name=\"rr_hr\"\n                >\n                  {this.generateOptions(\"rr_hr\", [\n                    \"Regular\",\n                    \"Labored\",\n                    \"Shallow\",\n                    \"Irregular\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"RR/min\", \"rr_rrmin\")}{\" \"}\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    value={this.state.rr_rrmin}\n                    className=\"mb-3\"\n                    name=\"rr_rrmin\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text className=\"mb-3\">RR/min</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {formLabel(\"RR Quality\", \"rr_quality\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.rr_quality}\n                  name=\"rr_quality\"\n                >\n                  {this.generateOptions(\"rr_quality\", [\"Regular\", \"Irregular\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Oxygen\")}\n                {formLabel(\"O2 Saturation\", \"o2_saturation\")}\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    value={this.state.o2_saturation}\n                    name=\"o2_saturation\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>sat%</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n\n                {formLabel(\"O2 Source\", \"o2_source\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.o2_source}\n                  name=\"o2_source\"\n                >\n                  {this.generateOptions(\"o2_source\", [\n                    \"None (Room Air)\",\n                    \"Nasal Canula\",\n                    \"Nasal Canula: Hi Flow\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"O2 Site\", \"o2_site\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.o2_site}\n                  name=\"o2_site\"\n                >\n                  {this.generateOptions(\"o2_site\", [\"????\", \"????\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n            <Row className=\"justify-content-end\">\n              <Button\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  border: \"solid\",\n                  color: \"#1761a0\",\n                }}\n              >\n                Submit Assessment\n              </Button>\n            </Row>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateAssessment })(Vitals);\n",["345","346"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/NewNote.js",["347"],"import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          //   type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n\nconsole.log(props)\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Critial-Care Pain Observation Tool\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Facial Expression</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Facial Expression\", [\n                \"0, Relaxed, neutral\",\n                \"2, Grimacing\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Body Movements</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Absence of Movements\",\n                \"1, Protection\",\n                \"2, Restlessness\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Muscle Tension</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Muscle Tension\", [\n                \"0, Relaxed\",\n                \"1, Tense, rigid\",\n                \"2, Very tense or rigid\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Press to Toggle Intubated?</Form.Label>\n            <Button\n              className=\"mb-3\"\n              name=\"scale_value\"\n              onClick={props.setIntubated}\n                >{props.intubated ? \"Yes\": \"No\"}</Button>\n          </Form.Group>\n\n{props.intubated ?\n          <Form.Group>\n            <Form.Label>Compliance with Ventilator</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Tolerating ventilator or movement\",\n                \"1, Coughing by tolerating\",\n                \"2, Fighting Ventilator\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n:\n          <Form.Group>\n            <Form.Label>Vocalization (extubated patients)</Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"mb-3\"\n              name=\"scale_value\"\n              //   value={this.state.scale_value}\n            >\n              {generateOptions(\"Body Movements\", [\n                \"0, Talking in normal tone or no sound\",\n                \"1, Sighing, moaning\",\n                \"2, Crying out, sobbing\",\n              ])}\n            </Form.Control>\n          </Form.Group>\n}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function CPOT() {\n  const [modalShow, setModalShow] = React.useState(true);\n    const [intubated, setIntubated] = React.useState(true)\n  return (\n    <>\n      {/* <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n          Launch vertically centered modal\n        </Button> */}\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        intubated={intubated}\n        setIntubated={()=>setIntubated(!intubated)}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/index.js",[],["348","349"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/careplans.js",[],["350","351"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/users.js",[],["352","353"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/Dashboard.js",[],["354","355"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Education.js",["356","357"],"import React, { Component } from \"react\";\nimport { Card, Form, Row, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchCreateMain} from \"../../../actions/main\"\nclass Education extends Component {\n    state = {\n        content: \"\",\n        admission_id: this.props.admission.id,\n        author: this.props.user.id\n    }\n\n    handleChange = (event) => {\n        console.log(event.target.name);\n        this.setState({\n          [event.target.name]: event.target.value,\n        });\n      };\n\n      handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n        const token = localStorage.getItem(\"my_app_token\");\n        this.props.fetchCreateMain(token, \"educations\", { education: this.state });\n      };\n\n\n  render (){\n      console.log(this.state)\n      return (\n        <div style={{ height: \"100%\", overflow: \"scroll\" }}>\n        <Form style={{ padding: \"0\", margin: \"50px\" }} onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Form.Group style={{ padding: \"0\", margin: \"0\" }}>\n\n            <Form.Label>\n              <strong>Enter Shift Patient Education Information</strong>\n            </Form.Label>\n            <Form.Control\n            value={this.state.content}\n              as=\"textarea\"\n              name=\"content\"\n              style={{ height: \"50vh\", width: \"100%\" }}\n            />\n          </Form.Group>\n          <hr />\n          <Form.Group>\n            <Row className=\"justify-content-end\">\n              <Button\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  border: \"solid\",\n                  color: \"#1761a0\",\n                }}\n              >\n                Submit Education\n              </Button>\n            </Row>\n          </Form.Group>\n        </Form>\n      </div>\n\n      )\n  }\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admission: state.admissions.currentAdmission\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateMain})(Education);\n",["358","359"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/DailyCares.js",["360","361","362","363","364"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Tooltip,\n    InputGroup,\n    Form,\n    Button,\n    Col,\n    Row,\n    Card,\n    Overlay,\n    OverlayTrigger,\n  } from \"react-bootstrap\";\n\n  import DateTime from \"../../hooks/DateTime\";\n  import { fetchCreateAssessment } from \"../../../actions/assessment\";\nimport PatientCarePlan from \"../../forms/PatientCarePlan\";\n\n\n\n  class DailyCares extends Component {\n\n    state = {\n        author: this.props.user.id,\n        date_initiated: \"\",\n        nursing_diagnosis: \"\",\n        goals_outcomes: \"\",\n        interventions: \"\",\n        evaluation: \"\",\n        admission_id: this.props.currentAdmission.id,\n        notes: \"\"\n    }\n\n\n\n    handleChange = (event) => {\n        console.log(event.target.name);\n        this.setState({\n          [event.target.name]: event.target.value,\n        });\n      };\n\n      handleDateChange = (event) => {\n        this.setState({\n            dressing_change_due: event,\n        });\n      };\n\n\n      handleSubmit = (event) => {\n        event.preventDefault();\n        const token = localStorage.getItem(\"my_app_token\")\n        this.props.fetchCreateAssessment(token, \"dailycares\", {dailycare: this.state})\n      };\n\n      generateOptions = (place, [...props]) => {\n        return [...props, \"\"].map((site) => {\n          return (\n            <option\n              inline\n              type=\"checkbox\"\n              label={site}\n              name={place}\n              id={`inline-${site}-2`}\n              value={site}\n            />\n          );\n        });\n      };\n      formLabel = (props) => {\n        return (\n          <OverlayTrigger\n            placement=\"right\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={this.renderTooltip(props)}\n          >\n            <Form.Label as={Row} value={props} />\n          </OverlayTrigger>\n        );\n      };\n\n      render() {\n        const renderTooltip = (props) => (\n          <Tooltip id=\"button-tooltip\" {...props}>\n            {props}\n          </Tooltip>\n        );\n\n        const formLabel = (props) => {\n          return (\n            <OverlayTrigger\n              placement=\"left\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={renderTooltip(props)}\n            >\n              <Form.Label as={Row} className=\"justify-content-center\">\n                {props}\n              </Form.Label>\n            </OverlayTrigger>\n          );\n        };\n        return (\n          <div>\n              {this.props.patientCareplan ? <PatientCarePlan /> : null}\n              <hr/>\n            <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n              <Row>\n                <Col>\n                  <Form.Group>\n                    {formLabel(\"Nurse Notes\")}\n                    <br/>\n                    <Form.Control as=\"textarea\"\n                    value={this.props.notes}\n                    name=\"notes\"\n                    onChange={this.handleChange}>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <hr />\n\n              <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n            </Form>\n          </div>\n        );\n      }\n    }\n\n    const mapStateToProps = (state) => ({\n        user: state.user,\n        admissions: state.admissions.array,\n        currentAdmission: state.admissions.currentAdmission,\n        currentPatient: state.patients.currentPatient,\n        careplans: state.careplans.array,\n        patientCareplan: state.careplans.patientCareplan\n\n        });\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateAssessment})(DailyCares);\n",["365","366"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/assessment.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/containers/employee/ReportPages.js",["367","368","369","370"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/Pain.js",["371","372"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Form,\n  Button,\n  Col,\n  Row,\n  OverlayTrigger,\n  InputGroup,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { fetchCreateAssessment } from \"../../../actions/assessment\";\nimport { CPOT } from \"../../hooks/NewNote\";\n\nclass Pain extends Component {\n  state = {\n    author: this.props.user.username,\n    admission_id: this.props.admission.id,\n    assume_pain: \"\",\n    asleep: \"\",\n    scale_type: \"\",\n    scale_value: \"N/A\",\n    orientation: \"\",\n    location: \"\",\n    treatment: \"\",\n    pasero_sedation: \"\",\n  };\n\n  //   handleChange = (event) => {\n  //     console.log(event);\n  //     if (event.target.checked) {\n  //       const newState = {\n  //         ...this.state,\n  //         [event.target.name]: this.state[event.target.name].concat(\n  //           event.target.value\n  //         ),\n  //       };\n  //       this.setState({\n  //         ...newState,\n  //       });\n  //     } else {\n  //       const newState = {\n  //         ...this.state,\n  //         [event.target.name]: this.state[event.target.name].filter(\n  //           (x) => x !== event.target.value\n  //         ),\n  //       };\n  //       this.setState({\n  //         ...newState,\n  //       });\n  //     }\n  //   };\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateAssessment(token, \"pains\", { pain: this.state });\n  };\n\n  formLabel = (props) => {\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={this.renderTooltip(props)}\n      >\n        <Form.Label as={Row} value={props} />\n      </OverlayTrigger>\n    );\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          //   type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  generateValueOptions = () => {\n    switch (this.state.scale_type) {\n      case \"0-10\":\n        return this.generateOptions(\"scale_value\", [\n          \"\",\n          \"Mild\",\n          \"Moderate\",\n          \"Severe\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"10\",\n        ]);\n      case \"CPOT\":\n        return <CPOT />;\n      case \"Wong-Baker\":\n        return this.generateOptions(\"scale_value\", [\n          \"\",\n          \"0, No Hurt\",\n          \"1\",\n          \"2, Hurts Little Bit\",\n          \"3\",\n          \"4, Hurts, Little More\",\n          \"5\",\n          \"6, Hurts Even More\",\n          \"7\",\n          \"8, Hurts, Whole Lot\",\n          \"9\",\n          \"10, Hurts Worst\",\n        ]);\n      case \"Asleep\":\n        return this.generateOptions(\"scale_value\", [\"None\"]);\n      case \"Assume Pain\":\n        return this.generateOptions(\"scale_value\", [\"N/A\"]);\n      default:\n        return this.generateOptions(\"scale_value\", [\"N/A\"]);\n    }\n  };\n\n  render() {\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n         <strong>Last Four Entries:</strong>\n          {props.map(p=>{\n              return <><hr style={{borderColor: \"white\"}} /><p>{p}</p></>\n          })}\n      </Tooltip>\n    );\n\n    const formLabel = (named, status) => {\n        const lastFour = this.props.admission.pains.map(pain => {\n            return pain.[status]\n        })\n\n        const trueFour = lastFour.slice(-4)\n\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(trueFour)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {named}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    return (\n      <div>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group>\n                {/* {formLabel(\"Scoring Tool\")} */}\n                {/* {formLabel(\"Assume Pain\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.assume_pain}\n                  className=\"mb-3\"\n                  name=\"assume_pain\"\n                >\n                  {this.generateOptions(\"assume_pain\", [\"yes\", \"no\"])}\n                </Form.Control>\n\n                {formLabel(\"Asleep\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.asleep}\n                  className=\"mb-3\"\n                  name=\"asleep\"\n                >\n                  {this.generateOptions(\"asleep\", [\"yes\", \"no\"])}\n                </Form.Control> */}\n\n                {formLabel(\"Scale Type\", \"scale_type\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.scale_type}\n                  className=\"mb-3\"\n                  name=\"scale_type\"\n                >\n                  {this.generateOptions(\"scale_type\", [\n                    \"0-10\",\n                    \"CPOT\",\n                    \"Wong-Baker\",\n                    \"Asleep\",\n                    \"Assume Pain\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Scale Value\", \"scale_value\")}\n                <Form.Control\n                  as=\"select\"\n                  className=\"mb-3\"\n                  name=\"scale_value\"\n                  value={this.state.scale_value}\n                >\n                  {this.generateValueOptions()}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Orientation\", \"orientation\")}\n                <Form.Control\n                  as=\"select\"\n                  className=\"mb-3\"\n                  name=\"orientation\"\n                  value={this.state.orientation}\n                >\n                  {this.generateOptions(\"orientation\", [\n                    \"Upper\",\n                    \"Lower\",\n                    \"Mid\",\n                    \"Left\",\n                    \"Right\",\n                    \"Anterior\",\n                    \"Posterior\",\n                  ])}\n                </Form.Control>\n\n                {formLabel(\"Location\", \"location\")}\n                <Form.Control\n                  as=\"select\"\n                  className=\"mb-3\"\n                  name=\"location\"\n                  value={this.state.location}\n                >\n                  {this.generateOptions(\"location\", [\n                    \"locaiton1\",\n                    \"locaiton3\",\n                    \"locaiton1\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                {formLabel(\"Treatment\", \"treatment\")}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.treatment}\n                  className=\"mb-3\"\n                  name=\"treatment\"\n                >\n                  {this.generateOptions(\"treatment\", [\n                    \"Declines\",\n                    \"Medication\",\n                    \"Non-Pharm\",\n                  ])}\n                </Form.Control>\n                {formLabel(\"Pasero Sedation\", \"pasero_sedation\")}{\" \"}\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.pasero_sedation}\n                  className=\"mb-3\"\n                  name=\"pasero_sedation\"\n                >\n                  {this.generateOptions(\"pasero_sedation\", [\"1\", \"2\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <hr />\n\n          <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateAssessment })(Pain);\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Imaging.js",["373"],"import React, { Component } from \"react\";\nimport { Col, Form, Row, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchCreateOrder } from \"../../../actions/orders\";\n\nclass Imaging extends Component {\n  state = {\n    time: \"\",\n    frequency: \"\",\n    contrast: \"\",\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateOrder(token, \"imagings\", { imaging: this.state });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form\n          onChange={(event) => this.handleChange(event)}\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form.Group>\n              <Form.Label>Time</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                className=\"mb-3\"\n                name=\"time\"\n              >\n                {this.generateOptions(\"roomService\", [\n                  \"Stat\",\n                  \"Timed\",\n                  \"Routine\",\n                ])}\n              </Form.Control>\n            </Form.Group>\n            <hr />\n            <Form.Group>\n              <Form.Label>Frequency</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                className=\"mb-3\"\n                name=\"frequency\"\n              >\n                {this.generateOptions(\"roomService\", [\"yes\", \"no\"])}\n              </Form.Control>\n            </Form.Group>\n            <hr />\n            <Form.Group>\n              <Form.Label>Contrast</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                className=\"mb-3\"\n                name=\"contrast\"\n              >\n                {this.generateOptions(\"roomService\", [\n                  \"with Contrast\",\n                  \"without Contrast\",\n                  \"with and without Contrast\",\n                ])}\n              </Form.Control>\n            </Form.Group>\n            </Col>\n            <hr />\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Order\n                </Button>\n              </Row>\n            </Form.Group>\n\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({    user: state.user,\n    admission: state.admissions.currentAdmission\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateOrder})(Imaging);\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Medications.js",["374"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Diet.js",["375"],"import React, { Component } from \"react\";\nimport { Col, Form, Button, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport DateTime from \"../../hooks/DateTime\";\nimport { fetchCreateOrder } from \"../../../actions/orders\";\n\nclass Diet extends Component {\n  state = {\n    eligible_room_service: \"yes\",\n    accuchecks: \"no\",\n    type: \"\",\n    time_start: \"\",\n    notify_rn: \"no\",\n    primary_diet: \"General\",\n    consistency: \"Regular\",\n    one_to_one_feed: \"no\",\n    liquid: \"N/A\",\n    straw: \"yes\",\n    comment: \"\",\n    submitted_at: \"\",\n    admission_id: this.props.admission.id,\n    author: this.props.user.id\n  };\n\n  componentDidMount() {\n    this.setState({\n      time_start: new Date(),\n    });\n  }\n\n  generateOptions = (place, [...props]) => {\n    return [...props].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n\n  setSubmitTime = () => {\n      this.setState({\n          submitted_at: new Date()\n      })\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateOrder(token, \"diets\", { diet: this.state });\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n      time_start: event,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form\n          onChange={(event) => this.handleChange(event)}\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <Row>\n            <Col md={{ span: 3 }}>\n              <Form.Group>\n                <Form.Label>Room Service Eligible?</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"yes\"\n                  className=\"mb-3\"\n                  name=\"eligible_room_service\"\n                >\n                  {this.generateOptions(\"eligible_room_service\", [\"yes\", \"no\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={{ span: 3 }}>\n              <Form.Group>\n                <Form.Label>Accuchecks</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"no\"\n                  className=\"mb-3\"\n                  name=\"accuchecks\"\n                >\n                  {this.generateOptions(\"accuchecks\", [\"yes\", \"no\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={{ span: 3 }}>\n              <Form.Group>\n                <Form.Label>Schedule Start</Form.Label>\n\n                <DateTime\n                  date={this.state.time_start}\n                  handleDateChange={this.handleDateChange}\n                />\n              </Form.Group>\n            </Col>\n\n            <Col md={{ span: 3 }}>\n              <Form.Group>\n                <Form.Label>Notify RN?</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue={this.state.notify_rn}\n                  className=\"mb-3\"\n                  name=\"notify_rn\"\n                >\n                  {this.generateOptions(\"notify_rn\", [\"yes\", \"no\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col md={{ span: 4 }}>\n              <Form.Group>\n                <Form.Label>Primary Diet</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue={this.state.primary_diet}\n                  className=\"mb-3\"\n                  name=\"primary_diet\"\n                >\n                  {this.generateOptions(\"primary_diet\", [\n                    \"Cardiac\",\n                    \"General\",\n                    \"NPO\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={{ span: 4 }}>\n              <Form.Group>\n                <Form.Label>Consistency</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue={this.state.consistency}\n                  className=\"mb-3\"\n                  name=\"consistency\"\n                >\n                  {this.generateOptions(\"consistency\", [\n                    \"Chopped\",\n                    \"Ground\",\n                    \"Full Liquid\",\n                    \"Clear Liquid\",\n                    \"Pureed\",\n                    \"Regular\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={{ span: 4 }}>\n              <Form.Group>\n                <Form.Label>1:1 Feed</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue={this.state.one_to_one_feed}\n                  className=\"mb-3\"\n                  name=\"one_to_one_feed\"\n                >\n                  {this.generateOptions(\"one_to_one_feed\", [\"yes\", \"no\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col md={{ span: 4 }}>\n              <Form.Group>\n                <Form.Label>Liquid Diet</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue={this.state.liquid}\n                  className=\"mb-3\"\n                  name=\"liquid\"\n                >\n                  {this.generateOptions(\"liquid\", [\n                    \"Thin-Liquid\",\n                    \"Nectar-Thick\",\n                    \"Honey-Thick\",\n                    \"N/A\",\n                  ])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={{ span: 4 }}>\n              <Form.Group>\n                <Form.Label>Straw</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue={this.state.straw}\n                  className=\"mb-3\"\n                  name=\"straw\"\n                >\n                  {this.generateOptions(\"straw\", [\"yes, pinched\", \"no\", \"yes\"])}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col md={{ span: 1 }}>\n              <Form.Group>\n                <Form.Label>Comment</Form.Label>\n              </Form.Group>\n            </Col>\n\n            <Col md={{ offset: 1, span: 7 }}>\n              <Form.Group>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Enter Any Notes...\"\n                  className=\"mb-3\"\n                  name=\"comment\"\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n            </Row>\n            <hr />\n            <Form.Group>\n              <Row className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Order\n                </Button>\n              </Row>\n            </Form.Group>\n\n\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admission: state.admissions.currentAdmission\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {fetchCreateOrder})(Diet);\n",["376","377"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Labs.js",["378","379"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/ATDNavigator.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/OrdersNavigator.js",["380"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Discharge.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Assessment/IV.js",["381","382","383","384"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Assessment.js",[],["385","386"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/ClaimAdmissions.js",["387","388","389"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Orders.js",["390"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport  Consult  from \"../Orders/Consult\";\nimport  Diet  from \"../Orders/Diet\";\nimport  Imaging  from \"../Orders/Imaging\";\nimport  Labs  from \"../Orders/Labs\";\nimport Medications from \"../Orders/Medications\";\nimport  Nursing  from \"../Orders/Nursing\";\nimport  OrdersNavigator  from \"../Orders/OrdersNavigator\";\n\nclass Orders extends Component {\n    render() {\n        const {id} = this.props\n        return (\n            <Card style={{height: \"100%\", overflow: \"scroll\"}}>\n            <Card.Header>\n              <OrdersNavigator />\n            </Card.Header>\n            <Card.Body >\n              <Switch>\n                <Medications\n              path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/medications*`}\n              />\n                <Labs\n                  exact\n                  path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/labs*`}\n                  />\n                <Nursing\n                  exact\n                  path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/nursing*`}\n                  />\n                <Consult\n                  exact\n                  path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/consult*`}\n                  />\n                <Imaging\n                  exact\n                  path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/imaging*`}\n                  />\n                <Diet\n                  exact\n                  path={`/dashboard/${this.props.user.id}/admissions/${this.props.currentAdmission.id}/orders/diet*`}\n                  />\n              </Switch>\n            </Card.Body>\n          </Card>\n              )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    admissions: state.admissions.array,\n    currentAdmission: state.admissions.currentAdmission,\n    currentPatient: state.patients.currentPatient,\n  })\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n",["391","392"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/LoadingCard.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/CarePlan.js",["393","394","395"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Tooltip,\n  InputGroup,\n  Form,\n  Button,\n  Col,\n  Row,\n  Card,\n  Overlay,\n  OverlayTrigger,\n  ListGroup,\n} from \"react-bootstrap\";\nimport {\n  fetchAllCareplans,\n  fetchCreateCarePlan,\n} from \"../../../actions/careplan\";\nimport PatientCarePlan from \"../../forms/PatientCarePlan\";\n\nclass CarePlan extends Component {\n  state = {\n    author: this.props.user.id,\n    diagnosis_category: \"\",\n    nursing_diagnosis: \"\",\n    ocs: [],\n    acs: [],\n    admission_id: this.props.currentAdmission.id,\n  };\n\n  componentDidMount() {\n    if (this.props.careplans.length === 0) {\n      this.props.fetchAllCareplans();\n    }\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    if (event.target.type === \"checkbox\") {\n      if (event.target.name === \"ocs\") {\n        return this.setState({\n          ocs: this.state.ocs.concat(event.target.value),\n        });\n      } else if (event.target.name === \"acs\") {\n        return this.setState({\n          acs: this.state.acs.concat(event.target.value),\n        });\n      } else {\n        return null;\n      }\n    } else {\n      return this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  };\n\n  handleDateChange = (event) => {\n    this.setState({\n      dressing_change_due: event,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateCarePlan(token, { care_plan: this.state });\n    this.setState({\n      author: this.props.user.id,\n      diagnosis_category: \"\",\n      nursing_diagnosis: \"\",\n      ocs: [],\n      acs: [],\n      admission_id: this.props.currentAdmission.id,\n    });\n  };\n\n  generateOptions = (place, [...props]) => {\n    return [...props, \"\"].map((site) => {\n      return (\n        <option\n          inline\n          type=\"checkbox\"\n          label={site}\n          name={place}\n          id={`inline-${site}-2`}\n          value={site}\n        />\n      );\n    });\n  };\n  formLabel = (props) => {\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={this.renderTooltip(props)}\n      >\n        <Form.Label as={Row} value={props} />\n      </OverlayTrigger>\n    );\n  };\n\n  nursing_diagnosis = () => {\n    if (this.state.diagnosis_category !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.map((c) => {\n        return c.name;\n      });\n      return this.generateOptions(\"nursing_diagnosis\", ni);\n    }\n  };\n\n  interventionsOptions = () => {\n    if (this.state.nursing_diagnosis !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.filter((c) => {\n        return c;\n      });\n      let xi = ni.find((n) => {\n        return n.name === this.state.nursing_diagnosis;\n      });\n      let yi = xi.interventions.map((i) => {\n        return i.item;\n      });\n\n      return (\n        <ListGroup style={{ padding: \"10px\" }}>\n          {yi.map((y) => {\n            return (\n              <ListGroup.Item>\n                <Form.Check\n                  type=\"checkbox\"\n                  id={`default-checkbox`}\n                  label={y}\n                  value={y}\n                  name=\"acs\"\n                />\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      );\n    }\n  };\n  goalsOptions = () => {\n    if (this.state.nursing_diagnosis !== \"\") {\n      let ind = this.props.careplans.find((care) => {\n        return care.name === this.state.diagnosis_category;\n      });\n      let ni = ind.nursing_diagnoses.filter((c) => {\n        return c;\n      });\n      let xi = ni.find((n) => {\n        return n.name === this.state.nursing_diagnosis;\n      });\n      let yi = xi.goals.map((g) => {\n        return g.item;\n      });\n\n      return (\n        <ListGroup style={{ padding: \"10px\" }}>\n          {yi.map((y) => {\n            return (\n              <ListGroup.Item>\n                <Form.Check\n                  type=\"checkbox\"\n                  id={`default-checkbox`}\n                  label={y}\n                  value={y}\n                  name=\"ocs\"\n                />\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      );\n    }\n  };\n  eraseState = () => {\n    this.setState({\n      nursing_diagnosis: \"\",\n    });\n  };\n  render() {\n    console.log(this.state);\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        {props}\n      </Tooltip>\n    );\n\n    const formLabel = (props) => {\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip(props)}\n        >\n          <Form.Label as={Row} className=\"justify-content-center\">\n            {props}\n          </Form.Label>\n        </OverlayTrigger>\n      );\n    };\n    console.log(this.props);\n    return (\n      <Card style={{ height: \"100%\", overflow: \"scroll\" }}>\n        <Card.Body>\n          <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Row md=\"2\" style={{ margin: \"0\" }}>\n                    <Form.Group as={Col}>\n                      {formLabel(\"Careplan Category\")}\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.diagnosis_category}\n                        className=\"mb-3\"\n                        name=\"diagnosis_category\"\n                        onChange={this.eraseState}\n                      >\n                        {this.generateOptions(\n                          \"diagnosis_category\",\n                          this.props.careplans.map((care) => {\n                            return care.name;\n                          })\n                        )}\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      {formLabel(\"Nursing Diagnosis\")}\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.nursing_diagnosis}\n                        className=\"mb-3\"\n                        name=\"nursing_diagnosis\"\n                      >\n                        {this.nursing_diagnosis()}\n                      </Form.Control>\n                    </Form.Group>\n                  </Row>\n\n                  <Form.Group>\n                    {this.state.nursing_diagnosis !== \"\"\n                      ? formLabel(\"Goals\")\n                      : null}\n                    {this.goalsOptions()}\n                  </Form.Group>\n                  <Form.Group>\n                    {this.state.nursing_diagnosis !== \"\"\n                      ? formLabel(\"Interventions\")\n                      : null}\n                    {this.interventionsOptions()}\n                  </Form.Group>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group>\n              <Row style={{margin: \"0\"}} className=\"justify-content-end\">\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Care Plan\n                </Button>\n              </Row>\n            </Form.Group>\n          </Form>\n          {!!this.props.careplans ? (\n            <>\n              <hr style={{ borderColor: \"#1761a0\" }} />\n              <Card>\n                <Card.Header>Current Care Plans</Card.Header>\n                <Card.Body>\n                  <PatientCarePlan />\n                </Card.Body>\n              </Card>\n            </>\n          ) : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admissions: state.admissions.array,\n  currentAdmission: state.admissions.currentAdmission,\n  currentPatient: state.patients.currentPatient,\n  careplans: state.careplans.array,\n  patientCareplan: state.careplans.patientCareplan,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, {\n  fetchAllCareplans,\n  fetchCreateCarePlan,\n})(CarePlan);\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/FormFunctions.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/auth.js",["396"],"export const loginSuccess = (data) => {\n    return {\n      type: 'USER_LOGIN',\n      data\n    }\n  }\n\n  export const currentUser = (data) => {\n    return {\n      type: 'CURRENT_USER',\n      data\n    }\n  }\n\n\nexport const createUserSuccess = (params) => {\n    console.log(params)\n  return (dispatch) => {\n    dispatch({ type: \"CREATE_USER_LOADING\" });\n    fetch(\"http://localhost:3001/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ user: params }),\n    })\n      .then((response) =>  response.json())\n      .then((data) => (console.log(data), dispatch({ type: \"USER_CREATED\", data }))\n      );\n  };\n};\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Admitting.js",[],["397","398"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/categories/UserCategories.js",[],["399","400"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftAssessment.js",["401","402","403","404","405","406"],"import React, { Component } from \"react\";\nimport { Container, Card, Form, Row, Button, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchCreateMain } from \"../../../actions/main\";\nimport { physicalAssessment } from \"../../../categories/UserCategories\";\n\nclass ShiftAssessment extends Component {\n  state = {\n    content: \"\",\n    admission_id: this.props.admission.id,\n    author: this.props.user.id,\n  };\n\n  componentDidMount() {\n    physicalAssessment.map((pa) => {\n      this.setState({ [pa]: \"WDL\" });\n    });\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"my_app_token\");\n    this.props.fetchCreateMain(token, \"physical_assessments\", {\n      physical_assessment: this.state,\n    });\n  };\n\n  printPhysicalAssessmentForm = () => {\n    let allTitles = [];\n\n    return physicalAssessment.map((pa) => {\n      const uppercased = pa.replace(pa[0], pa[0].toUpperCase());\n      const spaces = uppercased.replaceAll(\"_\", \" \");\n      const title = pa.split(\"_\")[0];\n      let newTitle = !!allTitles.includes(title) ? null : spaces.split(\" \")[0];\n      allTitles = allTitles.concat([title]);\n      let uniqueTitles = [...new Set(allTitles)];\n      return (\n        <>\n          {newTitle ? (\n            <>\n              <hr />\n              <Row>\n              <Form.Label\n                id={newTitle}\n                column=\"lg\"\n                style={{ textAlign: \"center\" }}\n              >\n                <strong>{newTitle}</strong>\n              </Form.Label>\n              <a style={{ color: \"#1761a0\"}} href=\"#top\" >(top)</a>\n              </Row>\n            </>\n          ) : null}\n          <Form.Row key={pa}>\n            <Form.Label\n              column=\"lg\"\n              lg={4}\n              for={pa}\n              style={{ textAlign: \"end\" }}\n            >\n              {spaces}\n            </Form.Label>\n            <Col>\n              {\" \"}\n              <Form.Control\n                as={Col}\n                id={pa}\n                value={this.state.pa}\n                defaultValue=\"WDL\"\n                as=\"input\"\n                name={pa}\n              />\n            </Col>\n          </Form.Row>\n        </>\n      );\n    });\n  };\n\n//   makeLinksFromSections = () => {\n    // asyncCall();\n    // function makeUniqueTitlesArray() {\n    //   let allTitles = [];\n    //   let uniqueTitles = [];\n    //   physicalAssessment.map((pa) => {\n    //     // const uppercased = pa.replace(pa[0], pa[0].toUpperCase());\n    //     // const spaces = uppercased.replaceAll(\"_\", \" \");\n    //     const title = pa.split(\"_\")[0];\n    //     // let newTitle = !!allTitles.includes(title)\n    //     //   ? null\n    //     //   : spaces.split(\" \")[0];\n    //     allTitles = allTitles.concat([title]);\n    //     uniqueTitles = [...new Set(allTitles)];\n    //   });\n    //   return uniqueTitles;\n    // }\n\n    // async function asyncCall() {\n    //   const result = await makeUniqueTitlesArray();\n    //   console.log(\"wait\", result);\n    //   return result.map((l) => {\n    //     return <a href={`#${l}`}>{l}</a>\n    //   });\n    // }\n\n\n//   };\n makeUniqueTitlesArray = () => {\n    let allTitles = [];\n    let uniqueTitles = [];\n    physicalAssessment.map((pa) => {\n      const uppercased = pa.replace(pa[0], pa[0].toUpperCase());\n      const spaces = uppercased.replaceAll(\"_\", \" \");\n      const title = spaces.split(\" \")[0];\n    //   let newTitle = !!allTitles.includes(spaces)\n    //     ? null\n    //     : spaces.split(\" \")[0];\n      allTitles = allTitles.concat([title]);\n      uniqueTitles = [...new Set(allTitles)];\n    });\n    console.log(uniqueTitles)\n    return uniqueTitles.map((l) => {\n        const f =`#${l}`\n        return <a type=\"button\" style={{ color: \"#1761a0\"}} href={f}>{l}</a>\n      });\n    }\n\n  render() {\n\n\n    return (\n      <div style={{ height: \"100%\", overflow: \"scroll\" }}>\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <Form.Label\n            column=\"lg\"\n            style={{ textAlign: \"center\", padding: \"15px\" }}\n            id=\"top\"\n          >\n            <strong>Enter Shift Assessment Notes</strong>\n          </Form.Label>\n          <Form.Control\n            value={this.state.content}\n            as=\"textarea\"\n            name=\"content\"\n            style={{ height: \"20vh\", paddingBlock: \"15px\" }}\n          />\n\n          <hr />\n          <Card style={{ padding: \"5px\" }}>\n            <Form.Label column=\"lg\" style={{ textAlign: \"center\" }}>\n              <strong>Physical Assessment Form</strong>\n            </Form.Label>\n            <Row style={{paddingRight: \"20%\", paddingLeft: \"20%\"}} lg={5}>\n            {this.makeUniqueTitlesArray()}\n            </Row  >\n            <Row md={1} noGutters className=\"justify-content-between \">\n              {this.printPhysicalAssessmentForm(this.makeLinksFromSections)}\n            </Row>\n            <Form.Group>\n              <Row className=\"justify-content-end\" style={{padding: \"0\", margin: \"0\"}}>\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"transparent\",\n                    border: \"solid\",\n                    color: \"#1761a0\",\n                  }}\n                >\n                  Submit Assessment\n                </Button>\n              </Row>\n            </Form.Group>\n          </Card>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  admission: state.admissions.currentAdmission,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { fetchCreateMain })(ShiftAssessment);\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/drug.js",[],["407","408"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/PdfPrinter.js",["409"],"import React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\n\nexport function PdfPrinter() {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  return (\n    <div>\n      <Document\n        file=\"somefile.pdf\"\n        onLoadSuccess={onDocumentLoadSuccess}\n      >\n        <Page pageNumber={pageNumber} />\n      </Document>\n      <p>Page {pageNumber} of {numPages}</p>\n    </div>\n  );\n}\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DeletePopUp.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/ATD/Transfers.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/hooks/DateTime.js",["410","411"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DateTime = ({ date, handleDateChange }) => {\n  const [startDate, setStartDate] = useState(new Date());\n\n\n  return (\n    <DatePicker\n\n      selected={date}\n      onChange={handleDateChange}\n      showTimeSelect\n      dateFormat=\"Pp\"\n      className=\"form-control\"\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTime);\n","/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/patients.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/actions/orders.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/Summary.js",["412","413","414","415","416"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/forms/PatientCarePlan.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/user.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/MainTabs/ShiftNotes.js",["417","418","419","420"],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/reducers/vitals.js",[],"/Users/johnlovitsch/Dev/mod5 project/IntuitChart/intuit_chart_frontend/src/app/components/tabs/Orders/Consult.js",["421","422"],{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","replacedBy":"426"},{"ruleId":"423","replacedBy":"427"},{"ruleId":"425","replacedBy":"428"},{"ruleId":"429","severity":1,"message":"430","line":2,"column":18,"nodeType":"431","messageId":"432","endLine":2,"endColumn":21},{"ruleId":"429","severity":1,"message":"433","line":1,"column":17,"nodeType":"431","messageId":"432","endLine":1,"endColumn":26},{"ruleId":"423","replacedBy":"434"},{"ruleId":"425","replacedBy":"435"},{"ruleId":"429","severity":1,"message":"436","line":134,"column":7,"nodeType":"431","messageId":"432","endLine":134,"endColumn":25},{"ruleId":"423","replacedBy":"437"},{"ruleId":"425","replacedBy":"438"},{"ruleId":"439","severity":1,"message":"440","line":94,"column":33,"nodeType":"441","messageId":"442","endLine":94,"endColumn":34},{"ruleId":"429","severity":1,"message":"436","line":109,"column":7,"nodeType":"431","messageId":"432","endLine":109,"endColumn":25},{"ruleId":"429","severity":1,"message":"443","line":1,"column":28,"nodeType":"431","messageId":"432","endLine":1,"endColumn":34},{"ruleId":"429","severity":1,"message":"444","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":17},{"ruleId":"429","severity":1,"message":"445","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":7},{"ruleId":"429","severity":1,"message":"430","line":8,"column":3,"nodeType":"431","messageId":"432","endLine":8,"endColumn":6},{"ruleId":"429","severity":1,"message":"446","line":9,"column":3,"nodeType":"431","messageId":"432","endLine":9,"endColumn":12},{"ruleId":"429","severity":1,"message":"447","line":14,"column":3,"nodeType":"431","messageId":"432","endLine":14,"endColumn":10},{"ruleId":"429","severity":1,"message":"448","line":15,"column":3,"nodeType":"431","messageId":"432","endLine":15,"endColumn":17},{"ruleId":"429","severity":1,"message":"449","line":16,"column":3,"nodeType":"431","messageId":"432","endLine":16,"endColumn":6},{"ruleId":"429","severity":1,"message":"450","line":17,"column":3,"nodeType":"431","messageId":"432","endLine":17,"endColumn":14},{"ruleId":"429","severity":1,"message":"451","line":18,"column":3,"nodeType":"431","messageId":"432","endLine":18,"endColumn":14},{"ruleId":"429","severity":1,"message":"452","line":25,"column":10,"nodeType":"431","messageId":"432","endLine":25,"endColumn":15},{"ruleId":"453","severity":1,"message":"454","line":136,"column":15,"nodeType":"455","endLine":140,"endColumn":17},{"ruleId":"429","severity":1,"message":"456","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":21},{"ruleId":"429","severity":1,"message":"457","line":4,"column":22,"nodeType":"431","messageId":"432","endLine":4,"endColumn":43},{"ruleId":"429","severity":1,"message":"458","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":16},{"ruleId":"429","severity":1,"message":"446","line":15,"column":3,"nodeType":"431","messageId":"432","endLine":15,"endColumn":12},{"ruleId":"429","severity":1,"message":"459","line":16,"column":3,"nodeType":"431","messageId":"432","endLine":16,"endColumn":12},{"ruleId":"460","severity":1,"message":"461","line":80,"column":37,"nodeType":"462","messageId":"463","endLine":80,"endColumn":39},{"ruleId":"429","severity":1,"message":"464","line":1,"column":28,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"465","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":22},{"ruleId":"460","severity":1,"message":"461","line":53,"column":37,"nodeType":"462","messageId":"463","endLine":53,"endColumn":39},{"ruleId":"423","replacedBy":"466"},{"ruleId":"425","replacedBy":"467"},{"ruleId":"429","severity":1,"message":"446","line":12,"column":10,"nodeType":"431","messageId":"432","endLine":12,"endColumn":19},{"ruleId":"423","replacedBy":"468"},{"ruleId":"425","replacedBy":"469"},{"ruleId":"423","replacedBy":"470"},{"ruleId":"425","replacedBy":"471"},{"ruleId":"429","severity":1,"message":"433","line":1,"column":17,"nodeType":"431","messageId":"432","endLine":1,"endColumn":26},{"ruleId":"429","severity":1,"message":"445","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":14},{"ruleId":"429","severity":1,"message":"430","line":2,"column":16,"nodeType":"431","messageId":"432","endLine":2,"endColumn":19},{"ruleId":"429","severity":1,"message":"472","line":2,"column":43,"nodeType":"431","messageId":"432","endLine":2,"endColumn":47},{"ruleId":"429","severity":1,"message":"473","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":17},{"ruleId":"460","severity":1,"message":"474","line":29,"column":41,"nodeType":"462","messageId":"475","endLine":29,"endColumn":43},{"ruleId":"460","severity":1,"message":"461","line":44,"column":70,"nodeType":"462","messageId":"463","endLine":44,"endColumn":72},{"ruleId":"460","severity":1,"message":"461","line":45,"column":53,"nodeType":"462","messageId":"463","endLine":45,"endColumn":55},{"ruleId":"423","replacedBy":"476"},{"ruleId":"425","replacedBy":"477"},{"ruleId":"429","severity":1,"message":"433","line":1,"column":17,"nodeType":"431","messageId":"432","endLine":1,"endColumn":26},{"ruleId":"423","replacedBy":"478"},{"ruleId":"425","replacedBy":"479"},{"ruleId":"429","severity":1,"message":"445","line":10,"column":3,"nodeType":"431","messageId":"432","endLine":10,"endColumn":7},{"ruleId":"429","severity":1,"message":"480","line":11,"column":3,"nodeType":"431","messageId":"432","endLine":11,"endColumn":10},{"ruleId":"429","severity":1,"message":"436","line":320,"column":7,"nodeType":"431","messageId":"432","endLine":320,"endColumn":25},{"ruleId":"423","replacedBy":"481"},{"ruleId":"425","replacedBy":"482"},{"ruleId":"429","severity":1,"message":"473","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":17},{"ruleId":"423","replacedBy":"483"},{"ruleId":"425","replacedBy":"484"},{"ruleId":"423","replacedBy":"485"},{"ruleId":"425","replacedBy":"486"},{"ruleId":"423","replacedBy":"487"},{"ruleId":"425","replacedBy":"488"},{"ruleId":"423","replacedBy":"489"},{"ruleId":"425","replacedBy":"490"},{"ruleId":"429","severity":1,"message":"445","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":14},{"ruleId":"429","severity":1,"message":"436","line":71,"column":7,"nodeType":"431","messageId":"432","endLine":71,"endColumn":25},{"ruleId":"423","replacedBy":"491"},{"ruleId":"425","replacedBy":"492"},{"ruleId":"429","severity":1,"message":"493","line":5,"column":5,"nodeType":"431","messageId":"432","endLine":5,"endColumn":15},{"ruleId":"429","severity":1,"message":"445","line":10,"column":5,"nodeType":"431","messageId":"432","endLine":10,"endColumn":9},{"ruleId":"429","severity":1,"message":"480","line":11,"column":5,"nodeType":"431","messageId":"432","endLine":11,"endColumn":12},{"ruleId":"429","severity":1,"message":"494","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":18},{"ruleId":"429","severity":1,"message":"436","line":153,"column":7,"nodeType":"431","messageId":"432","endLine":153,"endColumn":25},{"ruleId":"423","replacedBy":"495"},{"ruleId":"425","replacedBy":"496"},{"ruleId":"429","severity":1,"message":"446","line":4,"column":21,"nodeType":"431","messageId":"432","endLine":4,"endColumn":30},{"ruleId":"429","severity":1,"message":"459","line":4,"column":37,"nodeType":"431","messageId":"432","endLine":4,"endColumn":46},{"ruleId":"429","severity":1,"message":"497","line":18,"column":8,"nodeType":"431","messageId":"432","endLine":18,"endColumn":17},{"ruleId":"429","severity":1,"message":"436","line":155,"column":7,"nodeType":"431","messageId":"432","endLine":155,"endColumn":25},{"ruleId":"429","severity":1,"message":"493","line":9,"column":3,"nodeType":"431","messageId":"432","endLine":9,"endColumn":13},{"ruleId":"429","severity":1,"message":"436","line":315,"column":7,"nodeType":"431","messageId":"432","endLine":315,"endColumn":25},{"ruleId":"429","severity":1,"message":"436","line":120,"column":7,"nodeType":"431","messageId":"432","endLine":120,"endColumn":25},{"ruleId":"429","severity":1,"message":"445","line":2,"column":35,"nodeType":"431","messageId":"432","endLine":2,"endColumn":39},{"ruleId":"429","severity":1,"message":"436","line":265,"column":7,"nodeType":"431","messageId":"432","endLine":265,"endColumn":25},{"ruleId":"423","replacedBy":"498"},{"ruleId":"425","replacedBy":"499"},{"ruleId":"429","severity":1,"message":"493","line":8,"column":3,"nodeType":"431","messageId":"432","endLine":8,"endColumn":13},{"ruleId":"429","severity":1,"message":"436","line":206,"column":7,"nodeType":"431","messageId":"432","endLine":206,"endColumn":25},{"ruleId":"429","severity":1,"message":"500","line":7,"column":14,"nodeType":"431","messageId":"432","endLine":7,"endColumn":16},{"ruleId":"429","severity":1,"message":"493","line":5,"column":3,"nodeType":"431","messageId":"432","endLine":5,"endColumn":13},{"ruleId":"429","severity":1,"message":"445","line":10,"column":3,"nodeType":"431","messageId":"432","endLine":10,"endColumn":7},{"ruleId":"429","severity":1,"message":"480","line":11,"column":3,"nodeType":"431","messageId":"432","endLine":11,"endColumn":10},{"ruleId":"429","severity":1,"message":"436","line":203,"column":7,"nodeType":"431","messageId":"432","endLine":203,"endColumn":25},{"ruleId":"423","replacedBy":"501"},{"ruleId":"425","replacedBy":"502"},{"ruleId":"429","severity":1,"message":"446","line":5,"column":3,"nodeType":"431","messageId":"432","endLine":5,"endColumn":12},{"ruleId":"429","severity":1,"message":"472","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":7},{"ruleId":"429","severity":1,"message":"436","line":146,"column":7,"nodeType":"431","messageId":"432","endLine":146,"endColumn":25},{"ruleId":"429","severity":1,"message":"500","line":15,"column":16,"nodeType":"431","messageId":"432","endLine":15,"endColumn":18},{"ruleId":"423","replacedBy":"503"},{"ruleId":"425","replacedBy":"504"},{"ruleId":"429","severity":1,"message":"493","line":5,"column":3,"nodeType":"431","messageId":"432","endLine":5,"endColumn":13},{"ruleId":"429","severity":1,"message":"480","line":11,"column":3,"nodeType":"431","messageId":"432","endLine":11,"endColumn":10},{"ruleId":"429","severity":1,"message":"436","line":306,"column":7,"nodeType":"431","messageId":"432","endLine":306,"endColumn":25},{"ruleId":"439","severity":1,"message":"440","line":29,"column":41,"nodeType":"441","messageId":"442","endLine":29,"endColumn":42},{"ruleId":"423","replacedBy":"505"},{"ruleId":"425","replacedBy":"506"},{"ruleId":"423","replacedBy":"507"},{"ruleId":"425","replacedBy":"508"},{"ruleId":"429","severity":1,"message":"446","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":19},{"ruleId":"460","severity":1,"message":"461","line":15,"column":33,"nodeType":"462","messageId":"463","endLine":15,"endColumn":35},{"ruleId":"429","severity":1,"message":"509","line":44,"column":11,"nodeType":"431","messageId":"432","endLine":44,"endColumn":23},{"ruleId":"453","severity":1,"message":"454","line":78,"column":17,"nodeType":"455","endLine":78,"endColumn":27},{"ruleId":"460","severity":1,"message":"461","line":119,"column":33,"nodeType":"462","messageId":"463","endLine":119,"endColumn":35},{"ruleId":"429","severity":1,"message":"436","line":193,"column":7,"nodeType":"431","messageId":"432","endLine":193,"endColumn":25},{"ruleId":"423","replacedBy":"510"},{"ruleId":"425","replacedBy":"511"},{"ruleId":"429","severity":1,"message":"512","line":6,"column":22,"nodeType":"431","messageId":"432","endLine":6,"endColumn":35},{"ruleId":"429","severity":1,"message":"513","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":19},{"ruleId":"429","severity":1,"message":"514","line":7,"column":21,"nodeType":"431","messageId":"432","endLine":7,"endColumn":33},{"ruleId":"429","severity":1,"message":"430","line":6,"column":3,"nodeType":"431","messageId":"432","endLine":6,"endColumn":6},{"ruleId":"429","severity":1,"message":"515","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":6},{"ruleId":"429","severity":1,"message":"516","line":12,"column":10,"nodeType":"431","messageId":"432","endLine":12,"endColumn":16},{"ruleId":"460","severity":1,"message":"474","line":38,"column":36,"nodeType":"462","messageId":"475","endLine":38,"endColumn":38},{"ruleId":"429","severity":1,"message":"436","line":152,"column":7,"nodeType":"431","messageId":"432","endLine":152,"endColumn":25},{"ruleId":"429","severity":1,"message":"517","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":15},{"ruleId":"429","severity":1,"message":"518","line":2,"column":17,"nodeType":"431","messageId":"432","endLine":2,"endColumn":24},{"ruleId":"429","severity":1,"message":"445","line":2,"column":26,"nodeType":"431","messageId":"432","endLine":2,"endColumn":30},{"ruleId":"429","severity":1,"message":"436","line":73,"column":7,"nodeType":"431","messageId":"432","endLine":73,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"429","severity":1,"message":"436","line":45,"column":7,"nodeType":"431","messageId":"432","endLine":45,"endColumn":25},"no-native-reassign",["519"],"no-negated-in-lhs",["520"],["519"],["520"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.",["519"],["520"],"'mapDispatchToProps' is assigned a value but never used.",["519"],["520"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'render' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Tooltip' is defined but never used.","'OverlayTrigger' is defined but never used.","'Nav' is defined but never used.","'NavbarBrand' is defined but never used.","'ButtonGroup' is defined but never used.","'Login' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'SignOutIcon' is defined but never used.","'updateUserInformation' is defined but never used.","'EditUser' is defined but never used.","'ListGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'HistoryChart' is defined but never used.",["519"],["520"],["519"],["520"],["519"],["520"],"'Form' is defined but never used.","'connect' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["519"],["520"],["519"],["520"],"'Overlay' is defined but never used.",["519"],["520"],["519"],["520"],["519"],["520"],["519"],["520"],["519"],["520"],["519"],["520"],"'InputGroup' is defined but never used.","'DateTime' is defined but never used.",["519"],["520"],"'LogoLarge' is defined but never used.",["519"],["520"],"'id' is assigned a value but never used.",["519"],["520"],["519"],["520"],["519"],["520"],["519"],["520"],"'uniqueTitles' is assigned a value but never used.",["519"],["520"],"'setPageNumber' is assigned a value but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'Row' is defined but never used.","'Switch' is defined but never used.","'Image' is defined but never used.","'Spinner' is defined but never used.","no-global-assign","no-unsafe-negation"]